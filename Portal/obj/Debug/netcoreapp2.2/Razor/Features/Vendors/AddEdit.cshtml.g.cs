#pragma checksum "F:\clients\Impre\ppc-master\Portal\Features\Vendors\AddEdit.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c603387ac6c8ca65fd501d9f67ef6dab1214d027"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Features_Vendors_AddEdit), @"mvc.1.0.view", @"/Features/Vendors/AddEdit.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Features/Vendors/AddEdit.cshtml", typeof(AspNetCore.Features_Vendors_AddEdit))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "F:\clients\Impre\ppc-master\Portal\Features\_ViewImports.cshtml"
using Portal;

#line default
#line hidden
#line 2 "F:\clients\Impre\ppc-master\Portal\Features\_ViewImports.cshtml"
using Portal.Models;

#line default
#line hidden
#line 3 "F:\clients\Impre\ppc-master\Portal\Features\_ViewImports.cshtml"
using Portal.Helpers.HTML;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c603387ac6c8ca65fd501d9f67ef6dab1214d027", @"/Features/Vendors/AddEdit.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6c1831ff6ff6d1f6721b272e06c352287d2a1fb2", @"/Features/_ViewImports.cshtml")]
    public class Features_Vendors_AddEdit : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<VendorViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/detail-page.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/contacts/index.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/vendors/index.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(23, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 3 "F:\clients\Impre\ppc-master\Portal\Features\Vendors\AddEdit.cshtml"
  
    ViewData["Title"] = "Vendor details";

#line default
#line hidden
            BeginContext(71, 2, true);
            WriteLiteral("\n\n");
            EndContext();
            DefineSection("styles", async() => {
                BeginContext(90, 6, true);
                WriteLiteral("\n\n    ");
                EndContext();
                BeginContext(96, 54, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c603387ac6c8ca65fd501d9f67ef6dab1214d0275197", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(150, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(155, 57, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c603387ac6c8ca65fd501d9f67ef6dab1214d0276527", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(212, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(217, 56, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "c603387ac6c8ca65fd501d9f67ef6dab1214d0277857", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(273, 96, true);
                WriteLiteral("\n    <link href=\"https://fonts.googleapis.com/css?family=Lato&display=swap\" rel=\"stylesheet\" />\n");
                EndContext();
            }
            );
            BeginContext(371, 45, true);
            WriteLiteral("\n\n<div class=\"page-header\">\n    <h3>Vendor - ");
            EndContext();
            BeginContext(417, 23, false);
#line 18 "F:\clients\Impre\ppc-master\Portal\Features\Vendors\AddEdit.cshtml"
            Write(Model.vendor.VendorName);

#line default
#line hidden
            EndContext();
            BeginContext(440, 16642, true);
            WriteLiteral(@"  </h3>
    <div class=""back-button"" title=""Back To List"">
        <svg class=""icon"">
            <use xlink:href=""/images/icons.svg#angle-double-left""></use>
        </svg>
        <span>Back To List</span>
    </div>
</div>

<div class=""outer-grid"">
    <div class=""grid-item item-border"">
        <div class=""grid-item-content"">
            <div class=""contact-info-container"">
                <div class=""contact-details"">
                    <div class=""vendor-container"">
                        <div class=""columns"">
                            <form>
                                <span class=""form-element"">
                                    <label for=""vendorname""> Vendor:</label>
                                    <input type=""text"" id=""vendorname"" name=""vendorname"">
                                </span>
                                <span class=""form-element"">
                                    <label for=""domain""> Domain:</label>
                                    <input type=""text"" id=""domain");
            WriteLiteral(@""" name=""domain"">
                                </span>
                                <span class=""form-element"">
                                    <label for=""w9""> W9:</label>
                                    <input type=""text"" id=""w9"" name=""w9"">
                                </span>
                                <span class=""form-element"">
                                    <label for=""license""> License:</label>
                                    <input type=""text"" id=""license"" name=""license"">
                                </span>
                                <span class=""form-element"">
                                    <label for=""years"">Years in Business: </label>
                                    <input type=""text"" id=""years"" name=""years"">
                                </span>
                                <span class=""form-element"">
                                    <label for=""fin""> FIN SSN:</label>
                                    <input type=""text"" id=""fin"">
          ");
            WriteLiteral(@"                      </span>
                                <span class=""form-element"">
                                    <label for=""coi""> CIO:</label>
                                    <input type=""text"" id=""coi"" name=""coi"">
                                </span>
                                <span class=""form-element"">
                                    <label for=""coiexp""> CIO Exp:</label>

                                    <input type=""text"" id=""coiexp"" name=""coiexp"">
                                </span>
                            </form>
                        </div>
                        <div class=""columns"">
                            <form>
                                <span class=""form-element"">
                                    <label for=""businesstype""> Business Type:</label>
                                    <input id=""businesstype"" name=""businesstype"" type=""text"" />

                                </span>
                                <span class=""form-element"">
   ");
            WriteLiteral(@"                                 <label for=""worktype""> Work Type:</label>
                                    <input id=""worktype"" name=""worktype"" type=""text"" />

                                </span>
                                <span class=""form-element"">
                                    <label for=""status""> Status:</label>
                                    <input id=""status"" name=""status"" type=""text"" />

                                </span>

                                <div class=""row"">
                                    <div class=""column5"">
                                        <span class=""form-element"">
                                            <label class=""label2"" for=""isunion"">Union</label>
                                            <input class=""input2"" type=""checkbox"" id=""isunion"" name=""isunion"">
                                        </span>
                                        <span class=""form-element"">
                                            <label class=""label2");
            WriteLiteral(@""" for=""iswbe"">WBE</label>
                                            <input class=""input2"" type=""checkbox"" id=""iswbe"" name=""iswbe"">
                                        </span>
                                        <span class=""form-element"">
                                            <label class=""label2"" for=""isva"">VA</label>
                                            <input class=""input2"" type=""checkbox"" id=""isva"" name=""isva"">
                                        </span>
                                    </div>
                                    <div class=""column6"">
                                        <span class=""form-element"">
                                            <label class=""label2"" for=""ismbe"">MBE</label>
                                            <input class=""input3"" type=""checkbox"" id=""ismbe"" name=""ismbe"">
                                        </span>
                                        <br />
                                        <div class=""form-element"">
      ");
            WriteLiteral(@"                                      <label class=""label2"" for=""issbe"">SBE</label>
                                            <input class=""input3"" type=""checkbox"" id=""issbe"" name=""issbe"">
                                        </div>

                                    </div>
                                </div>
                                <div class=""row button-bar"" style=""margin-top: 20px"">
                                    <button id=""save-button"" class=""btn yellow"">Save</button>
                                    <button id=""cancel-button"" class=""btn gray"">Cancel</button>
                                </div>
                                <div class=""row"" style=""display:none"">
                                    <input id=""vendorid"" type=""text"" name=""vendorid"">
                                </div>
                            </form>
                        </div>
                    </div>
                    <div class=""row"" style=""margin-top:20px; width:100%"">
                        ");
            WriteLiteral(@"<div class=""grid-item item-border"" style=""width:100%"">
                            <div class=""grid-item-header"">
                                <h3>Contacts</h3>
                            </div>
                            <div class=""grid-item-content"">
                                <div class=""vendor-contact-container""></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""contact-components"">
                    <div class=""inner-grid"">
                        <div class=""grid-item item-border"" style=""max-height:300px; min-height:200px;"">
                            <div class=""grid-item-header"">
                                <h3>Phone Numbers</h3>
                                <div class=""grid-item-header-buttons phone"">
                                    <button class=""btn toolbar add"" title=""Add New Record"">
                                        <svg class=""grid-item-icon green"">
                ");
            WriteLiteral(@"                            <use xlink:href=""/images/icons.svg#plus""></use>
                                        </svg>
                                    </button>
                                    <button class=""btn toolbar save"" title=""Save Changes"">
                                        <svg class=""grid-item-icon yellow"">
                                            <use xlink:href=""/images/icons.svg#save""></use>
                                        </svg>
                                    </button>
                                    <button class=""btn toolbar cancel"" title=""Cancel Changes"">
                                        <svg class=""grid-item-icon"">
                                            <use xlink:href=""/images/icons.svg#times""></use>
                                        </svg>
                                    </button>
                                </div>
                            </div>
                            <div class=""grid-item-content"" style=""max-height:29");
            WriteLiteral(@"0px; min-height:200px;"">
                                <div id=""phone-grid""></div>
                            </div>
                        </div>
                        <div class=""grid-item item-border"" style=""max-height:400px; min-height:200px;"">
                            <div class=""grid-item-header"">
                                <h3>Locations</h3>
                                <div class=""grid-item-header-buttons location"">
                                    <button class=""btn toolbar add"" title=""Add New Record"">
                                        <svg class=""grid-item-icon green"">
                                            <use xlink:href=""/images/icons.svg#plus""></use>
                                        </svg>
                                    </button>
                                    <button class=""btn toolbar save"" title=""Save Changes"">
                                        <svg class=""grid-item-icon yellow"">
                                            <use xlink:href=");
            WriteLiteral(@"""/images/icons.svg#save""></use>
                                        </svg>
                                    </button>
                                    <button class=""btn toolbar cancel"" title=""Cancel Changes"">
                                        <svg class=""grid-item-icon"">
                                            <use xlink:href=""/images/icons.svg#times""></use>
                                        </svg>
                                    </button>
                                </div>
                            </div>
                            <div class=""grid-item-content"" style=""max-height:400px; min-height:200px;"">
                                <div id=""location-grid""></div>
                                <script id=""location-popup-editor"" type=""text/x-kendo-template"">

                                    <div class=""k-edit-label"">
                                        <label for=""LocationID"">ID</label>
                                    </div>
                             ");
            WriteLiteral(@"       <div data-container-for=""LocationID"" class=""k-edit-field"">
                                        <input type=""text"" class=""k-input k-textbox"" name=""LocationID"" data-bind=""value:locationID"" />
                                    </div>

                                    <div class=""k-edit-label"">
                                        <label for=""Label"">Label</label>
                                    </div>
                                    <div data-container-for=""Label"" class=""k-edit-field"">
                                        <input type=""text"" class=""k-input k-textbox"" name=""Label"" data-bind=""value:label"" />
                                    </div>


                                    <div class=""k-edit-label"">
                                        <label for=""Address1"">Address 1</label>
                                    </div>
                                    <div data-container-for=""Adress1"" class=""k-edit-field"">
                                        <input type=""text"" cla");
            WriteLiteral(@"ss=""k-input k-textbox"" name=""Address1"" data-bind=""value:address1"" />
                                    </div>

                                    <div class=""k-edit-label"">
                                        <label for=""Address2"">Address 2</label>
                                    </div>
                                    <div data-container-for=""Adress2"" class=""k-edit-field"">
                                        <input type=""text"" class=""k-input k-textbox"" name=""Address2"" data-bind=""value:address2"" />
                                    </div>

                                    <div class=""row"">
                                        <div>
                                            <div class=""k-edit-label"">
                                                <label for=""AddCity"">City</label>
                                            </div>
                                            <div data-container-for=""AddCity"" class=""k-edit-field"">
                                                <input");
            WriteLiteral(@" type=""text"" class=""k-input k-textbox"" name=""AddCity"" data-bind=""value:addCity"" />
                                            </div>
                                        </div>
                                        <div>
                                            <div class=""k-edit-label"">
                                                <label for=""AddState"">State</label>
                                            </div>
                                            <div data-container-for=""AddState"" class=""k-edit-field"">
                                                <input type=""text"" class=""k-input k-textbox"" name=""AddState"" data-bind=""value:addState"" />
                                            </div>
                                        </div>
                                        <div>
                                            <div class=""k-edit-label"">
                                                <label for=""AddZip"">Zipcode</label>
                                            </div>
 ");
            WriteLiteral(@"                                           <div data-container-for=""AddZip"" class=""k-edit-field"">
                                                <input type=""text"" class=""k-input k-textbox"" name=""AddZip"" data-bind=""value:addZip"" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""row"">
                                        <div>
                                            <div class=""k-edit-label"">
                                                <label for=""Bldg"">Building</label>
                                            </div>
                                            <div data-container-for=""AddZip"" class=""k-edit-field"">
                                                <input type=""text"" class=""k-input k-textbox"" name=""Bldg"" data-bind=""value:bldg"" />
                                            </div>
                                        </div>
                 ");
            WriteLiteral(@"                       <div>
                                            <div class=""k-edit-label"">
                                                <label for=""Floor"">Floor</label>
                                            </div>
                                            <div data-container-for=""AddZip"" class=""k-edit-field"">
                                                <input type=""text"" class=""k-input k-textbox"" name=""Floor"" data-bind=""value:floor"" />
                                            </div>
                                        </div>
                                        <div>
                                            <div class=""k-edit-label"">
                                                <label for=""Room"">Room</label>
                                            </div>
                                            <div data-container-for=""AddZip"" class=""k-edit-field"">
                                                <input type=""text"" class=""k-input k-textbox"" name=""Room"" data-bind=""");
            WriteLiteral(@"value:room"" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""k-edit-label"">
                                        <label for=""ParentID"">ParentID</label>
                                    </div>
                                    <div data-container-for=""ParentID"" class=""k-edit-field"">
                                        <input type=""text"" class=""k-input k-textbox"" name=""ParentID"" data-bind=""value:parentID"" />
                                    </div>
                                    <div class=""k-edit-label"">
                                        <label for=""ParentType"">Parent Type</label>
                                    </div>
                                    <div data-container-for=""ParentType"" class=""k-edit-field"">
                                        <input type=""text"" class=""k-input k-textbox"" name=""ParentType"" data-bind=""value:parentType""");
            WriteLiteral(@" />
                                    </div>
                                </script>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(17100, 467, true);
                WriteLiteral(@"
    <script id=""noDataTemplate"" type=""text/x-kendo-tmpl"">
        <div>
            No data found. Do you want to add new item - '#: instance.text() #' ?
        </div>
        <br />
        <button id=""new-contact-button"" name=""new-contact-button"" class=""new-contact-button"">Add new item</button>
    </script>

    <script type=""module"" asp-append-version=""true"">
        import { VendorDetailsItem } from ""/js/vendors.js""
        var vdi = new VendorDetailsItem(");
                EndContext();
                BeginContext(17568, 31, false);
#line 303 "F:\clients\Impre\ppc-master\Portal\Features\Vendors\AddEdit.cshtml"
                                   Write(Html.Raw(Json.Serialize(Model)));

#line default
#line hidden
                EndContext();
                BeginContext(17599, 17, true);
                WriteLiteral(");\n    </script>\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<VendorViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
