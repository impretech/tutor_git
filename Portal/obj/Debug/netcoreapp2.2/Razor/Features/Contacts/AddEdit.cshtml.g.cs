#pragma checksum "F:\clients\Impre\ppc-master\Portal\Features\Contacts\AddEdit.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0c2f5c60434f79e33edb034e0ea6703807ef48c7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Features_Contacts_AddEdit), @"mvc.1.0.view", @"/Features/Contacts/AddEdit.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Features/Contacts/AddEdit.cshtml", typeof(AspNetCore.Features_Contacts_AddEdit))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "F:\clients\Impre\ppc-master\Portal\Features\_ViewImports.cshtml"
using Portal;

#line default
#line hidden
#line 2 "F:\clients\Impre\ppc-master\Portal\Features\_ViewImports.cshtml"
using Portal.Models;

#line default
#line hidden
#line 3 "F:\clients\Impre\ppc-master\Portal\Features\_ViewImports.cshtml"
using Portal.Helpers.HTML;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0c2f5c60434f79e33edb034e0ea6703807ef48c7", @"/Features/Contacts/AddEdit.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6c1831ff6ff6d1f6721b272e06c352287d2a1fb2", @"/Features/_ViewImports.cshtml")]
    public class Features_Contacts_AddEdit : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ContactViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/detail-page.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/contacts/index.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(24, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 3 "F:\clients\Impre\ppc-master\Portal\Features\Contacts\AddEdit.cshtml"
  
    ViewData["Title"] = "Contact Details";

#line default
#line hidden
            BeginContext(73, 2, true);
            WriteLiteral("\n\n");
            EndContext();
            DefineSection("styles", async() => {
                BeginContext(92, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(97, 54, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0c2f5c60434f79e33edb034e0ea6703807ef48c74843", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(151, 5, true);
                WriteLiteral("\n    ");
                EndContext();
                BeginContext(156, 57, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0c2f5c60434f79e33edb034e0ea6703807ef48c76173", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(213, 95, true);
                WriteLiteral("\n    <link href=\"https://fonts.googleapis.com/css?family=Lato&display=swap\" rel=\"stylesheet\"/>\n");
                EndContext();
            }
            );
            BeginContext(310, 55, true);
            WriteLiteral("\n    <div class=\"page-header\">\n        <h3>Contact ID: ");
            EndContext();
            BeginContext(366, 23, false);
#line 15 "F:\clients\Impre\ppc-master\Portal\Features\Contacts\AddEdit.cshtml"
                   Write(Model.contact.ContactID);

#line default
#line hidden
            EndContext();
            BeginContext(389, 3, true);
            WriteLiteral("  (");
            EndContext();
            BeginContext(393, 23, false);
#line 15 "F:\clients\Impre\ppc-master\Portal\Features\Contacts\AddEdit.cshtml"
                                              Write(Model.contact.FirstName);

#line default
#line hidden
            EndContext();
            BeginContext(416, 1, true);
            WriteLiteral(" ");
            EndContext();
            BeginContext(418, 22, false);
#line 15 "F:\clients\Impre\ppc-master\Portal\Features\Contacts\AddEdit.cshtml"
                                                                       Write(Model.contact.LastName);

#line default
#line hidden
            EndContext();
            BeginContext(440, 50, true);
            WriteLiteral(")</h3>\n        <h3 style=\"margin-left:50px\">Mode: ");
            EndContext();
            BeginContext(491, 10, false);
#line 16 "F:\clients\Impre\ppc-master\Portal\Features\Contacts\AddEdit.cshtml"
                                      Write(Model.Mode);

#line default
#line hidden
            EndContext();
            BeginContext(501, 6078, true);
            WriteLiteral(@"</h3>

        <div class=""doc-button"" id=""doc-button"" title=""Upload Document"">
            <svg class=""icon"">
                <use xlink:href=""/images/icons.svg#paperclip""></use>
            </svg>
        </div>
        <div class=""back-button"" title=""Back To List"">
            <svg class=""icon"">
                <use xlink:href=""/images/icons.svg#angle-double-left""></use>
            </svg>
            <span>Back To List</span>
        </div>
    </div>

<div class=""outer-grid"">
    <div class=""grid-item item-border"">
        <div class=""grid-item-content"">
            <div class=""contact-info-container"">
                <div class=""contact-details"">
                    <div class=""row"" style=""display:none"">
                        <input id=""contactid"" type=""text"" name=""contactid"">
                    </div>
                    <div class=""row"">
                        <div class=""form-element"" style=""min-width: 50px;"">
                            <label for=""prefix"">Prefix: </label>
                      ");
            WriteLiteral(@"      <input id=""prefix"" type=""text"" name=""prefix"">
                        </div>
                        <div class=""form-element"" style=""min-width: 100px;"">
                            <label for=""firstname"">First: <abbr title=""required"">*</abbr></label>
                            <input id=""firstname"" type=""text"" name=""firstname"">
                        </div>
                        <div class=""form-element"" style=""min-width: 100px;"">
                            <label for=""lastname"">Last: <abbr title=""required"">*</abbr></label>
                            <input id=""lastname"" type=""text"" name=""lastname"">
                        </div>
                        <div class=""form-element"" style=""min-width: 50px;"">
                            <label for=""Suffix"">Suffix: </label>
                            <input id=""suffix"" type=""text"" name=""suffix"">
                        </div>
                    </div>
                    <div class=""row"">

                    </div>
                    <div class=""ro");
            WriteLiteral(@"w"">
                        <div class=""form-element"">
                            <label for=""company"">Company: <abbr title=""required"">*</abbr></label>
                            <input id=""companyCombo"" type=""text"" name=""company"">
                        </div>
                    </div>
                    <div class=""row"">
                        <div class=""form-element"">
                            <label for=""jobtitle"">Title: </label>
                            <input id=""jobtitle"" type=""text"" name=""jobtitle"">
                        </div>
                        <div class=""form-element"">
                            <label for=""dept"">Dept: </label>
                            <input id=""dept"" type=""text"" name=""dept"">
                        </div>
                    </div>
                    <div class=""row"">
                        <div class=""form-element"">
                            <label for=""preferredname"">Preferred (Goes by): </label>
                            <input id=""preferredname"" ");
            WriteLiteral(@"type=""text"" name=""preferredname"">
                        </div>
                        <div class=""form-element"">
                            <label for=""showasname"">Show As: </label>
                            <input id=""showasname"" type=""text"" name=""showasname"">
                        </div>
                    </div>
                    <div class=""row"">
                        <div class=""form-element"">
                            <label for=""note"">Notes: </label>
                            <textarea id=""note"" type=""text"" name=""note"" rows=""2""></textarea>
                        </div>
                    </div>
                    <div class=""row button-bar"">
                        <button id=""save-button"" class=""btn yellow"">Save</button>
                        <button id=""cancel-button"" class=""btn gray"">Cancel</button>
                    </div>
                    <div class=""row"" style=""margin-top:20px;"">
                        <div class=""grid-item item-border"">
                            <di");
            WriteLiteral(@"v class=""grid-item-header"">
                                <h3>Project Roles</h3>
                            </div>
                            <div class=""grid-item-content"">
                                <div id=""roles-grid""></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""contact-components"">
                    <div class=""inner-grid"">
                        <div class=""grid-item item-border"">
                            <div class=""grid-item-header"">
                                <h3>Phone Numbers</h3>
                                <div class=""grid-item-header-buttons phone"">
                                    <button class=""btn toolbar add"" title=""Add New Record"">
                                        <svg class=""grid-item-icon green"">
                                            <use xlink:href=""/images/icons.svg#plus""></use>
                                        </svg>
                   ");
            WriteLiteral(@"                 </button>
                                    <button class=""btn toolbar save"" title=""Save Changes"">
                                        <svg class=""grid-item-icon yellow"">
                                            <use xlink:href=""/images/icons.svg#save""></use>
                                        </svg>
                                    </button>
                                    <button class=""btn toolbar cancel"" title=""Cancel Changes"">
                                        <svg class=""grid-item-icon"">
                                            <use xlink:href=""/images/icons.svg#times""></use>
                                        </svg>
                                    </button>
                                </div>
                            </div>
                            <div class=""grid-item-content"">
                                <div id=""phone-grid""></div>
                            </div>
");
            EndContext();
            BeginContext(6645, 9801, true);
            WriteLiteral(@"                        </div>

                        <div class=""grid-item item-border"">
                            <div class=""grid-item-header"">
                                <h3>Emails</h3>
                                <div class=""grid-item-header-buttons email"">
                                    <button class=""btn toolbar add"" title=""Add New Record"">
                                        <svg class=""grid-item-icon green"">
                                            <use xlink:href=""/images/icons.svg#plus""></use>
                                        </svg>
                                    </button>
                                    <button class=""btn toolbar save"" title=""Save Changes"">
                                        <svg class=""grid-item-icon yellow"">
                                            <use xlink:href=""/images/icons.svg#save""></use>
                                        </svg>
                                    </button>
                                    <button ");
            WriteLiteral(@"class=""btn toolbar cancel"" title=""Cancel Changes"">
                                        <svg class=""grid-item-icon"">
                                            <use xlink:href=""/images/icons.svg#times""></use>
                                        </svg>
                                    </button>
                                </div>
                            </div>
                            <div class=""grid-item-content"">
                                <div id=""email-grid""></div>
                            </div>
                        </div>
                        <div class=""grid-item item-border"">
                            <div class=""grid-item-header"">
                                <h3>Locations</h3>
                                <div class=""grid-item-header-buttons location"">
                                    <button class=""btn toolbar add"" title=""Add New Record"">
                                        <svg class=""grid-item-icon green"">
                                         ");
            WriteLiteral(@"   <use xlink:href=""/images/icons.svg#plus""></use>
                                        </svg>
                                    </button>
                                    <button class=""btn toolbar save"" title=""Save Changes"">
                                        <svg class=""grid-item-icon yellow"">
                                            <use xlink:href=""/images/icons.svg#save""></use>
                                        </svg>
                                    </button>
                                    <button class=""btn toolbar cancel"" title=""Cancel Changes"">
                                        <svg class=""grid-item-icon"">
                                            <use xlink:href=""/images/icons.svg#times""></use>
                                        </svg>
                                    </button>
                                </div>
                            </div>
                            <div class=""grid-item-content"">
                                <div id=""loc");
            WriteLiteral(@"ation-grid""></div>
                                <script id=""location-popup-editor"" type=""text/x-kendo-template"">

                                    <div class=""k-edit-label"">
                                        <label for=""LocationID"">ID</label>
                                    </div>
                                    <div data-container-for=""LocationID"" class=""k-edit-field"">
                                        <input type=""text"" class=""k-input k-textbox"" name=""LocationID"" data-bind=""value:locationID"" />
                                    </div>

                                    <div class=""k-edit-label"">
                                        <label for=""Label"">Label</label>
                                    </div>
                                    <div data-container-for=""Label"" class=""k-edit-field"">
                                        <input type=""text"" class=""k-input k-textbox"" name=""Label"" data-bind=""value:label"" />
                                    </div>


             ");
            WriteLiteral(@"                       <div class=""k-edit-label"">
                                        <label for=""Address1"">Address 1</label>
                                    </div>
                                    <div data-container-for=""Adress1"" class=""k-edit-field"">
                                        <input type=""text"" class=""k-input k-textbox"" name=""Address1"" data-bind=""value:address1"" />
                                    </div>

                                    <div class=""k-edit-label"">
                                        <label for=""Address2"">Address 2</label>
                                    </div>
                                    <div data-container-for=""Adress2"" class=""k-edit-field"">
                                        <input type=""text"" class=""k-input k-textbox"" name=""Address2"" data-bind=""value:address2"" />
                                    </div>

                                    <div class=""row"">
                                        <div>
                               ");
            WriteLiteral(@"             <div class=""k-edit-label"">
                                                <label for=""AddCity"">City</label>
                                            </div>
                                            <div data-container-for=""AddCity"" class=""k-edit-field"">
                                                <input type=""text"" class=""k-input k-textbox"" name=""AddCity"" data-bind=""value:addCity"" />
                                            </div>
                                        </div>
                                        <div>
                                            <div class=""k-edit-label"">
                                                <label for=""AddState"">State</label>
                                            </div>
                                            <div data-container-for=""AddState"" class=""k-edit-field"">
                                                <input type=""text"" class=""k-input k-textbox"" name=""AddState"" data-bind=""value:addState"" />
                        ");
            WriteLiteral(@"                    </div>
                                        </div>
                                        <div>
                                            <div class=""k-edit-label"">
                                                <label for=""AddZip"">Zipcode</label>
                                            </div>
                                            <div data-container-for=""AddZip"" class=""k-edit-field"">
                                                <input type=""text"" class=""k-input k-textbox"" name=""AddZip"" data-bind=""value:addZip"" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""row"">
                                        <div>
                                            <div class=""k-edit-label"">
                                                <label for=""Bldg"">Building</label>
                                            </div>
                  ");
            WriteLiteral(@"                          <div data-container-for=""AddZip"" class=""k-edit-field"">
                                                <input type=""text"" class=""k-input k-textbox"" name=""Bldg"" data-bind=""value:bldg"" />
                                            </div>
                                        </div>
                                        <div>
                                            <div class=""k-edit-label"">
                                                <label for=""Floor"">Floor</label>
                                            </div>
                                            <div data-container-for=""AddZip"" class=""k-edit-field"">
                                                <input type=""text"" class=""k-input k-textbox"" name=""Floor"" data-bind=""value:floor"" />
                                            </div>
                                        </div>
                                        <div>
                                            <div class=""k-edit-label"">
                  ");
            WriteLiteral(@"                              <label for=""Room"">Room</label>
                                            </div>
                                            <div data-container-for=""AddZip"" class=""k-edit-field"">
                                                <input type=""text"" class=""k-input k-textbox"" name=""Room"" data-bind=""value:room"" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""k-edit-label"">
                                        <label for=""ParentID"">ParentID</label>
                                    </div>
                                    <div data-container-for=""ParentID"" class=""k-edit-field"">
                                        <input type=""text"" class=""k-input k-textbox"" name=""ParentID"" data-bind=""value:parentID"" />
                                    </div>
                                    <div class=""k-edit-label"">
                          ");
            WriteLiteral(@"              <label for=""ParentType"">Parent Type</label>
                                    </div>
                                    <div data-container-for=""ParentType"" class=""k-edit-field"">
                                        <input type=""text"" class=""k-input k-textbox"" name=""ParentType"" data-bind=""value:parentType"" />
                                    </div>
                                </script>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

");
            EndContext();
            BeginContext(16625, 2, true);
            WriteLiteral("\n\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(16645, 453, true);
                WriteLiteral(@"
    <script id=""noDataTemplate"" type=""text/x-kendo-tmpl"">
        <div>
            No data found. Do you want to add new Vendor - '#: instance.text() #' ?
        </div>
        <br />
        <button id=""new-vendor-button"" name=""new-vendor-button"" class=""new-vendor-button"">Add new Vendor</button>
    </script>

    <script type=""module"" asp-append-version=""true"">
    import { ContactDetailsItem } from ""/js/contacts.js""
    new ContactDetailsItem(");
                EndContext();
                BeginContext(17099, 31, false);
#line 306 "F:\clients\Impre\ppc-master\Portal\Features\Contacts\AddEdit.cshtml"
                      Write(Html.Raw(Json.Serialize(Model)));

#line default
#line hidden
                EndContext();
                BeginContext(17130, 18, true);
                WriteLiteral(");\n    </script>\n\n");
                EndContext();
            }
            );
            BeginContext(17150, 1, true);
            WriteLiteral("\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ContactViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
