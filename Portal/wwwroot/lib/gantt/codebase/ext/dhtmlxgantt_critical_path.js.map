{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./sources/core/relations/links_builder.js","webpack:///./sources/utils/helpers.js","webpack:///./sources/ext/critical_path/critical_path.js","webpack:///./sources/ext/critical_path/slack.js","webpack:///./sources/ext/critical_path.js","webpack:///./sources/core/relations/graph_helper.js","webpack:///./sources/core/relations/links_common.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gantt","getVirtualRoot","mixin","getSubtaskDates","id","config","root_id","type","types","project","$source","$target","$virtual","getLinkedTasks","includePredecessors","startIds","clearCache","_isLinksCacheEnabled","_startLinksCache","relations","visited","result","length","this","_getLinkedTasks","push","_endLinksCache","_collectRelations","rootObj","isChild","visitedLinks","linkKey","successors","_getSuccessors","predecessors","_getPredecessors","hashSum","rootTask","visitedTasks","output","from","undefined","tasksStack","current","pop","isTaskExists","getTask","rel","isSameParent","sourceParent","targetParent","target","hasChild","children","getChildren","units","second","minute","hour","day","week","month","quarter","year","arrayFilter","arr","callback","filter","getSecondsInUnit","unit","forEach","workArray","slice","arrayMap","map","resArray","arrayFind","find","arrayDifference","item","arraySome","hashToArray","hash","sortArrayOfHash","field","desc","compare","b","sort","throttle","timeout","wait","apply","arguments","setTimeout","isArray","obj","Array","isDate","getFullYear","getMonth","getDate","isStringObject","Function","toString","constructor","isNumberObject","isBooleanObject","delay","timer","$cancelTimeout","$pending","args","clearTimeout","$execute","objectKeys","keys","requestAnimationFrame","w","webkitRequestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","cb","isEventable","attachEvent","detachEvent","linksBuilder","graphHelper","_isProjectEnd","task","_hasDuration","start_date","end_date","_getProjectEnd","_needRecalc","_cache","reset","_isRecalcNeeded","_getLinks","links","groupAdjacentEdges","_calculateBranch","path","criticalTasks","adjacentLinks","stack","next","_getSlack","_calculateSummaryTasks","summaryHash","criticalHash","parent","getParent","_calculate","summaryTasks","eachTask","isSummaryTask","isCriticalTask","init","resetCache","handleTaskIdChange","oldId","newId","criticalPathHandler","highlight_critical_path","render","refreshTask","helpers","_private","_freeSlack","_totalSlack","_slackNeedCalculate","_linkedTasksById","_calculateTotalSlack","linksByTaskId","entry","slack","getFreeSlack","source","minSlack","linked","totalSlackByTaskId","_chainSlackCount","_slacksChanged","additional","calculateDuration","targetWithMinimalSlack","_getTargetWithMinimalSlack","_calculateTaskSlack","_calculateRelationSlack","_calculateHierarchySlack","_calculateLinkSlack","linkId","link","getLink","getSlack","to","Math","max","_resetTotalSlackCache","_shouldCalculateTotalSlack","getTotalSlack","dropCachedFreeSlack","slackHandler","criticalPath","assert","isCriticalLink","task1","task2","common","newSlack","_convertToFinishToStartLink","next_task","relation","getTaskType","milestone","duration","lag","getVertices","ids","len","vertices","topologicalSort","edges","$incoming","successor","S","v","L","node","edge","res","tarjanStronglyConnectedComponents","verticesHash","edgesFromTasks","recurse","connectedComponents","getVertex","workStack","index","lowLink","onStack","e","min","com","tasks","findLoops","cycles","component","_get_linked_task","getTarget","taskId","_get_link_target","_get_link_source","caching","formattedLinksStash","inheritedSuccessorsStash","inheritedPredecessorsStash","getPredecessorsCache","_formatLink","isChildOf","_getImplicitLinks","respectTargetOffset","auto_scheduling_move_projects","targetDates","getState","drag_id","fromLength","fromTask","j","toLength","toTask","subtaskLink","taskParent","_isAutoSchedulable","auto_scheduling","selectOffset","selectSourceLinks","skipChild","linksCollection","siblingLink","siblingId","siblingTask","abs","_getDirectDependencies","selectSuccessors","linksIds","concat","_getInheritedDependencies","cacheCollection","stop","inheritedRelations","eachParent","parentDependencies","_getDirectSuccessors","_getInheritedSuccessors","_getDirectPredecessors","_getInheritedPredecessors","skipInherited","sourceTask","targetTask","finish_to_start","preferredStart","additionalLag","start_to_start","finish_to_finish","start_to_finish"],"mappings":";;;;;;;;;;CAAA,SAAAA,EAAAC,GACA,oBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,SACA,sBAAAG,eAAAC,IACAD,UAAAH,OACA,CACA,IAAAK,EAAAL,IACA,QAAAM,KAAAD,GAAA,iBAAAJ,gBAAAF,GAAAO,GAAAD,EAAAC,IAPA,CASCC,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAT,QAGA,IAAAC,EAAAM,EAAAE,IACAJ,EAAAI,EACAC,GAAA,EACAV,YAUA,OANAW,EAAAF,GAAAG,KAAAX,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAS,GAAA,EAGAT,EAAAD,QA0DA,OArDAQ,EAAAK,EAAAF,EAGAH,EAAAM,EAAAP,EAGAC,EAAAO,EAAA,SAAAf,EAAAgB,EAAAC,GACAT,EAAAU,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CT,EAAAe,EAAA,SAAAvB,GACA,oBAAAwB,eAAAC,aACAN,OAAAC,eAAApB,EAAAwB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAApB,EAAA,cAAiD0B,OAAA,KAQjDlB,EAAAmB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAlB,EAAAkB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAvB,EAAAe,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAlB,EAAAO,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAtB,EAAA0B,EAAA,SAAAjC,GACA,IAAAgB,EAAAhB,KAAA4B,WACA,WAA2B,OAAA5B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAO,EAAAO,EAAAE,EAAA,IAAAA,GACAA,GAIAT,EAAAU,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD5B,EAAA+B,EAAA,aAIA/B,IAAAgC,EAAA,wBClFAvC,EAAAD,QAAA,SAAAyC,GACA,OACAC,eAAA,WACA,OAAAD,EAAAE,MACAF,EAAAG,mBAEAC,GAAAJ,EAAAK,OAAAC,QACAC,KAAAP,EAAAK,OAAAG,MAAAC,QACAC,WACAC,WACAC,UAAA,KAKAC,eAAA,SAAAT,EAAAU,GACA,IAAAC,GAAAX,GAGAY,GAAA,EACAhB,EAAAiB,yBACAjB,EAAAkB,mBACAF,GAAA,GAKA,IAHA,IAAAG,KACAC,KACAC,KACAzD,EAAA,EAAiBA,EAAAmD,EAAAO,OAAqB1D,IACtC2D,KAAAC,gBAAAT,EAAAnD,GAAAwD,EAAAN,EAAAO,GAGA,QAAAzD,KAAAyD,EACAF,EAAAM,KAAAJ,EAAAzD,IAMA,OAFAoD,GACAhB,EAAA0B,iBACAP,GAGAQ,kBAAA,SAAAC,EAAAC,EAAAf,EAAAgB,GACA,IAOAC,EAPAC,EAAAhC,EAAAiC,eAAAL,EAAAC,GAEAK,KACApB,IACAoB,EAAAlC,EAAAmC,iBAAAP,EAAAC,IAKA,IADA,IAAAV,KACAvD,EAAA,EAAiBA,EAAAoE,EAAAV,OAAuB1D,IAExCkE,EADAC,EAAAC,EAAApE,GAAAwE,WAIAN,EAAAC,IAAA,EACAZ,EAAAM,KAAAO,EAAApE,KAGA,IAAAA,EAAA,EAAiBA,EAAAsE,EAAAZ,OAAyB1D,IAE1CkE,EADAC,EAAAG,EAAAtE,GAAAwE,WAIAN,EAAAC,IAAA,EACAZ,EAAAM,KAAAS,EAAAtE,KAGA,OAAAuD,GAEAK,gBAAA,SAAAa,EAAAC,EAAAxB,EAAAyB,GAQA,IAPA,IAGAX,EAHAY,OAAAC,IAAAJ,EAAArC,EAAAK,OAAAC,QAAA+B,EAEAP,GADAQ,SAIAI,IAAsBF,OAAA1B,sBAAAe,SAAA,IAEtBa,EAAApB,QAAA,CACA,IAAAqB,EAAAD,EAAAE,MACAf,EAAAc,EAAAd,QAGA,IAAAS,EADAE,EAAAG,EAAAH,MACA,CAIAZ,EAAA5B,EAAA6C,aAAAL,GAAAxC,EAAA8C,QAAAN,GAAAjB,KAAAtB,iBACAqC,EAAAE,IAAA,EAIA,IAFA,IAAArB,EAAAI,KAAAI,kBAAAC,EAAAC,EAAAf,EAAAgB,GAEAlE,EAAA,EAAgBA,EAAAuD,EAAAG,OAAsB1D,IAAA,CACtC,IAAAmF,EAAA5B,EAAAvD,GACA2E,EAAAQ,EAAAX,SAAAW,EACA,IAAAC,EAAAD,EAAAE,cAAAF,EAAAG,aAEAZ,EADAS,EAAAI,SAEAT,EAAAjB,MAAuBe,KAAAO,EAAAI,OAAArC,qBAAA,EAAAe,QAAAmB,IAGvB,GAAAhD,EAAAoD,SAAAxB,EAAAxB,IACA,KAAAiD,EAAArD,EAAAsD,YAAA1B,EAAAxB,IACA,IAAAxC,EAAA,EAAiBA,EAAAyF,EAAA/B,OAAqB1D,IACtC0E,EAAAe,EAAAzF,KACA8E,EAAAjB,MAAwBe,KAAAa,EAAAzF,GAAAkD,qBAAA,EAAAe,SAAA,MAKxB,OAAAU,sBC/GA,IAAAgB,GACAC,OAAA,EACAC,OAAA,GACAC,KAAA,KACAC,IAAA,MACAC,KAAA,OACAC,MAAA,OACAC,QAAA,OACAC,KAAA,SAgFA,SAAAC,EAAAC,EAAAC,GACA,IAAA7C,KAEA,GAAA4C,EAAAE,OACA,OAAAF,EAAAE,OAAAD,GAEA,QAAAtG,EAAA,EAAiBA,EAAAqG,EAAA3C,OAAgB1D,IACjCsG,EAAAD,EAAArG,QACAyD,IAAAC,QAAA2C,EAAArG,IAGA,OAAAyD,EAkHA7D,EAAAD,SACA6G,iBA5MA,SAAAC,GACA,OAAAd,EAAAc,IAAAd,EAAAG,MA4MAY,QAzMA,SAAAL,EAAAC,GACA,GAAAD,EAAAK,QACAL,EAAAK,QAAAJ,QAGA,IADA,IAAAK,EAAAN,EAAAO,QACA5G,EAAA,EAAiBA,EAAA2G,EAAAjD,OAAsB1D,IACvCsG,EAAAK,EAAA3G,OAoMA6G,SA/LA,SAAAR,EAAAC,GACA,GAAAD,EAAAS,IACA,OAAAT,EAAAS,IAAAR,GAKA,IAHA,IAAAK,EAAAN,EAAAO,QACAG,KAEA/G,EAAA,EAAiBA,EAAA2G,EAAAjD,OAAsB1D,IACvC+G,EAAAlD,KAAAyC,EAAAK,EAAA3G,OAEA,OAAA+G,GAsLAC,UAjLA,SAAAX,EAAAC,GACA,GAAAD,EAAAY,KACA,OAAAZ,EAAAY,KAAAX,GAEA,QAAAtG,EAAA,EAAiBA,EAAAqG,EAAA3C,OAAgB1D,IACjC,GAAAsG,EAAAD,EAAArG,MACA,OAAAqG,EAAArG,IA4KAoG,cACAc,gBA7FA,SAAAb,EAAAC,GACA,OAAAF,EAAAC,EAAA,SAAAc,EAAAnH,GACA,OAAAsG,EAAAa,EAAAnH,MA4FAoH,UAzGA,SAAAf,EAAAC,GACA,OAAAD,EAAA3C,OAAA,SAEA,QAAA1D,EAAA,EAAgBA,EAAAqG,EAAA3C,OAAgB1D,IAChC,GAAAsG,EAAAD,EAAArG,KAAAqG,GACA,SAGA,UAkGAgB,YAtHA,SAAAC,GACA,IAAA7D,KAEA,QAAA9B,KAAA2F,EACAA,EAAArF,eAAAN,IACA8B,EAAAI,KAAAyD,EAAA3F,IAIA,OAAA8B,GA8GA8D,gBAlDA,SAAAlB,EAAAmB,EAAAC,GACA,IAAAC,EAAA,SAAA3H,EAAA4H,GACA,OAAA5H,EAAA4H,GAGAtB,EAAAuB,KAAA,SAAA7H,EAAA4H,GACA,OAAA5H,EAAAyH,KAAAG,EAAAH,GAAA,EAEAC,EAAAC,EAAA3H,EAAAyH,GAAAG,EAAAH,IAAAE,EAAAC,EAAAH,GAAAzH,EAAAyH,OA2CAK,SA3FA,SAAAvB,EAAAwB,GACA,IAAAC,GAAA,EAEA,kBACAA,IACAzB,EAAA0B,MAAA,KAAAC,WACAF,GAAA,EACAG,WAAA,WACAH,GAAA,GACID,MAmFJK,QA3KA,SAAAC,GACA,OAAAC,MAAAF,QACAE,MAAAF,QAAAC,GAGAA,QAAAvD,IAAAuD,EAAA1E,QAAA0E,EAAApD,KAAAoD,EAAAvE,MAuKAyE,OAjJA,SAAAF,GACA,SAAAA,GAAA,iBAAAA,KACAA,EAAAG,aAAAH,EAAAI,UAAAJ,EAAAK,WAgJAC,eAnKA,SAAAN,GACA,OAAAA,GAAA,iBAAAA,GACA,wCAAAO,SAAA3G,UAAA4G,SAAArI,KAAA6H,EAAAS,cAkKAC,eA9JA,SAAAV,GACA,OAAAA,GAAA,iBAAAA,GACA,wCAAAO,SAAA3G,UAAA4G,SAAArI,KAAA6H,EAAAS,cA6JAE,gBAzJA,SAAAX,GACA,OAAAA,GAAA,iBAAAA,GACA,yCAAAO,SAAA3G,UAAA4G,SAAArI,KAAA6H,EAAAS,cAwJAG,MAnFA,SAAA1C,EAAAwB,GACA,IAAAmB,EAEAxF,EAAA,WACAA,EAAAyF,iBACA5C,EAAA6C,UAAA,EACA,IAAAC,EAAAf,MAAArG,UAAA4E,MAAArG,KAAA0H,WACAgB,EAAAf,WAAA,WACA5B,EAAA0B,MAAArE,KAAAyF,GACA3F,EAAA0F,UAAA,GACGrB,IAaH,OAVArE,EAAA0F,UAAA,EACA1F,EAAAyF,eAAA,WACAG,aAAAJ,GACA3C,EAAA6C,UAAA,GAEA1F,EAAA6F,SAAA,WACAhD,IACAA,EAAA4C,kBAGAzF,GA6DA8F,WA9CA,SAAAnB,GACA,GAAAtH,OAAA0I,KACA,OAAA1I,OAAA0I,KAAApB,GAEA,IACAzG,EADA8B,KAEA,IAAA9B,KAAAyG,EACAtH,OAAAkB,UAAAC,eAAA1B,KAAA6H,EAAAzG,IACA8B,EAAAI,KAAAlC,GAGA,OAAA8B,GAoCAgG,sBAjCA,SAAAnD,GACA,IAAAoD,EAAAzJ,OAOA,OANAyJ,EAAAD,uBACAC,EAAAC,6BACAD,EAAAE,yBACAF,EAAAG,0BACAH,EAAAI,wBACA,SAAAC,GAAmB7B,WAAA6B,EAAA,UACnBzD,IA0BA0D,YAvBA,SAAA5B,GACA,OAAAA,EAAA6B,aAAA7B,EAAA8B,mCClNA,IAAAC,EAAAhK,EAAA,GAAAA,CAAAiC,OACAgI,EAAAjK,EAAA,GAAAA,CAAAiC,OAEAxC,EAAAD,QAAA,SAAAyC,GAUA,OARAA,EAAAiI,cAAA,SAAAC,GACA,OAAA3G,KAAA4G,cACAC,WAAAF,EAAAG,SACAA,SAAA9G,KAAA+G,iBACAJ,WAKAK,aAAA,EACAC,OAAA,KACAC,MAAA,WACAlH,KAAAgH,aAAA,EACAhH,KAAAiH,OAAA,MAEAE,gBAAA,WACA,OAAAnH,KAAAgH,aAEAI,UAAA,WACA,IAAAC,EAAAb,EAAAlH,iBACA,OAAAmH,EAAAa,mBAAAD,IAEAE,iBAAA,SAAAZ,EAAAa,EAAAC,EAAAC,GAEA,GADAF,EAAAb,EAAA9H,KAAA,OACAqC,IAAAuG,EAAAd,EAAA9H,IAKA,IAFA,IAAA8I,GAAAhB,GAEAgB,EAAA5H,QAGA,GAAA0H,GAFAd,EAAAgB,EAAAtG,OAEAxC,KAAAJ,EAAAiI,cAAAC,GAEA,IADAc,EAAAd,EAAA9H,KAAA,EACA8I,EAAA5H,QAAA,CAEA0H,GADAd,EAAAgB,EAAAtG,OACAxC,KAAA,MAEK,CACL4I,EAAAd,EAAA9H,KAAA,EAEA,IADA,IAAA4B,EAAAiH,EAAAf,EAAA9H,QACAxC,EAAA,EAAoBA,EAAAoE,EAAAV,OAAuB1D,IAAA,CAE3C,IAAAuL,EAAAnJ,EAAA8C,QAAAd,EAAApE,GAAAuF,QACA,GAAAnD,EAAAoJ,UAAAlB,EAAAiB,EAAAnH,EAAApE,KAAA,KAAAmL,EAAAI,EAAA/I,KAAA4I,EAAAG,EAAA/I,KAAA,CACA2I,EAAAI,EAAA/I,KAAA,EAEA8I,EAAAzH,KAAAyG,GACAgB,EAAAzH,KAAA0H,GACA,UAOAE,uBAAA,SAAAC,EAAAC,GACA,QAAA3L,KAAA2L,EACA,GAAAA,EAAA3L,GAEA,IADA,IAAA4L,EAAAxJ,EAAAyJ,UAAA7L,QACA6E,IAAA6G,EAAAE,IAAAxJ,EAAA6C,aAAA2G,IACAF,EAAAE,IAAA,EACAA,EAAAxJ,EAAAyJ,UAAAD,GAKA,QAAA5L,KAAA0L,EACAC,EAAA3L,KAAA0L,EAAA1L,IAIA8L,WAAA,WACA,IAAAV,KACAhI,GAAA,EACA+H,KACA/I,EAAAiB,yBACAjB,EAAAkB,mBACAF,GAAA,GAEA,IAAA4H,EAAArH,KAAAoH,YAEAgB,KAeA,OAdA3J,EAAA4J,SAAA,SAAA1B,GACAa,EAAAb,EAAA9H,MAEAJ,EAAA6J,cAAA3B,GACAyB,EAAAzB,EAAA9H,SAAAqC,EAEAlB,KAAAuH,iBAAAZ,EAAAa,EAAAC,EAAAJ,KAEI5I,EAAAK,OAAAC,QAAAiB,MAEJA,KAAA8H,uBAAAM,EAAAX,GAEAhI,GACAhB,EAAA0B,iBACAsH,GAGAc,eAAA,SAAA5B,GACA,QAAAA,IAEA3G,KAAAmH,oBACAnH,KAAAiH,OAAAjH,KAAAmI,aACAnI,KAAAgH,aAAA,GAGAhH,KAAAiH,OAAAN,EAAA9H,MAGA2J,KAAA,WACA,IAAAC,EAAAhK,EAAAR,KAAA,WAEA,OADA+B,KAAAkH,SACA,GACIlH,MAEJ0I,EAAAjK,EAAAR,KAAA,SAAA0K,EAAAC,GAKA,OAJA5I,KAAAiH,SACAjH,KAAAiH,OAAA2B,GAAA5I,KAAAiH,OAAA0B,UACA3I,KAAAiH,OAAA0B,KAEA,GACI3I,MAEJvB,EAAA6H,YAAA,iBAAAmC,GACAhK,EAAA6H,YAAA,oBAAAmC,GACAhK,EAAA6H,YAAA,oBAAAmC,GACAhK,EAAA6H,YAAA,iBAAAmC,GACAhK,EAAA6H,YAAA,iBAAAoC,GACAjK,EAAA6H,YAAA,oBAAAmC,GACAhK,EAAA6H,YAAA,oBAAAmC,GACAhK,EAAA6H,YAAA,UAAAmC,GACAhK,EAAA6H,YAAA,aAAAmC,GAGA,IAAAI,EAAA,WACApK,EAAAK,OAAAgK,yBACArK,EAAAsK,UAEAtK,EAAA6H,YAAA,iBAAAuC,GACApK,EAAA6H,YAAA,oBAAAuC,GACApK,EAAA6H,YAAA,oBAAAuC,GACApK,EAAA6H,YAAA,iBAAAuC,GACApK,EAAA6H,YAAA,0BAAAqC,EAAAC,GAIA,OAHAnK,EAAAK,OAAAgK,yBAAArK,EAAA6C,aAAAsH,IACAnK,EAAAuK,YAAAJ,IAEA,IAEAnK,EAAA6H,YAAA,oBAAAuC,GACApK,EAAA6H,YAAA,oBAAAuC,2BC5JA,IAAArC,EAAAhK,EAAA,GAAAA,CAAAiC,OACAwK,EAAAzM,EAAA,GAEAP,EAAAD,QAAA,SAAAyC,GACA,IAAAyK,GACAC,cACAC,eACAC,qBAAA,EACAC,oBACAC,qBAAA,WACA,IAAAC,EAAAxJ,KAAAsJ,iBAEAL,EAAAlG,QAAAyD,EAAAlH,iBAAA,SAAAmK,GACA,IAAA9C,EAAAlI,EAAA8C,QAAAkI,EAAA7H,QACA8H,EAAAjL,EAAAkL,aAAAhD,GAEA6C,EAAAC,EAAAG,QASAF,EAAAF,EAAAC,EAAAG,QAAAC,SAAAH,QACAF,EAAAC,EAAAG,QAAAC,UACAjI,OAAA6H,EAAA7H,OACA8H,UAXAF,EAAAC,EAAAG,SACAC,UACAjI,OAAA6H,EAAA7H,OACA8H,SAEAI,WAUAN,EAAAC,EAAAG,QAAAE,OAAA5J,MACA0B,OAAA6H,EAAA7H,OACA8H,YAIA,IAAAK,KAiBA,OAfAtL,EAAA4J,SAAA,SAAAoB,GACAhL,EAAA6J,cAAAmB,UAIAvI,IAAA6I,EAAAN,EAAA5K,MACAkL,EAAAN,EAAA5K,IAAA,GAEAkL,EAAAN,EAAA5K,KAAAqK,EAAAc,iBAAAP,MAGAhL,EAAAwL,gBAAA,EACAjK,KAAAqJ,qBAAA,EACArJ,KAAAoJ,YAAAW,EAEAA,GAEAC,iBAAA,SAAAP,EAAAS,GAEA,OADAA,KAAA,GACA,GACA,KAAAlK,KAAAsJ,iBAAAG,EAAA5K,IACA,OAAAJ,EAAA0L,kBAAAV,EAAA3C,SAAArI,EAAAG,kBAAAkI,UAAAoD,EACA,SAAAlK,KAAAsJ,iBAAAG,EAAA5K,IAAAiL,OAAA/J,OACA,OAAAC,KAAAgK,iBAAAvL,EAAA8C,QAAAvB,KAAAsJ,iBAAAG,EAAA5K,IAAAiL,OAAA,GAAAlI,QAAAnD,EAAAkL,aAAAF,IAAAS,EACA,KAAAlK,KAAAsJ,iBAAAG,EAAA5K,IAAAiL,OAAA/J,OAAA,EACA,IAAAqK,EAAApK,KAAAqK,2BAAArK,KAAAsJ,iBAAAG,EAAA5K,IAAAiL,QAEA,OAAA9J,KAAAgK,iBAAAvL,EAAA8C,QAAA6I,EAAAxI,QAAAnD,EAAAkL,aAAAF,IAAAS,IAIAG,2BAAA,SAAAP,GACA,IAAAhK,EAMA,OALAmJ,EAAAlG,QAAA+G,EAAA,SAAAL,SACAvI,IAAApB,GAAA2J,EAAAC,MAAA5J,EAAA4J,SACA5J,EAAA2J,KAGA3J,GAGAwK,oBAAA,SAAA3D,GASA,OANAA,EAAAxH,SAAAwH,EAAAxH,QAAAY,OACAC,KAAAuK,wBAAA5D,GAEA3G,KAAAwK,yBAAA7D,IAMA4D,wBAAA,SAAA5D,GAKA,IAJA,IACA+C,EADAG,EAAA,EAEAxC,EAAAV,EAAAxH,QAEA9C,EAAA,EAAkBA,EAAAgL,EAAAtH,OAAkB1D,KAEpCwN,GADAH,EAAA1J,KAAAyK,oBAAApD,EAAAhL,MACA,IAAAA,KACAwN,EAAAH,GAGA,OAAAG,GAGAY,oBAAA,SAAAC,GACA,IAAAC,EAAAlM,EAAAmM,QAAAF,GACAhB,EAAA,EAIA,OAHAjL,EAAA6C,aAAAqJ,EAAAf,SAAAnL,EAAA6C,aAAAqJ,EAAA/I,UACA8H,EAAAjL,EAAAoM,SAAApM,EAAA8C,QAAAoJ,EAAAf,QAAAnL,EAAA8C,QAAAoJ,EAAA/I,UAEA8H,GAGAc,yBAAA,SAAA7D,GACA,IACA1F,EACA6J,EAAArM,EAAAG,kBAAAkI,SAOA,OALA7F,EADAxC,EAAA6C,aAAAqF,EAAAsB,SACAxJ,EAAAG,gBAAA+H,EAAA9H,IAAAiI,UAEAH,EAAAG,SAEAiE,KAAAC,IAAAvM,EAAA0L,kBAAAlJ,EAAA6J,GAAA,IAIAG,sBAAA,WACAjL,KAAAqJ,qBAAA,GAGA6B,2BAAA,WACA,OAAAlL,KAAAqJ,qBAGAM,aAAA,SAAAhD,GACA,OAAAlI,EAAA6C,aAAAqF,EAAA9H,KAGAmB,KAAAmJ,WAAAxC,EAAA9H,MACAJ,EAAA6J,cAAA3B,GACA3G,KAAAmJ,WAAAxC,EAAA9H,SAAAqC,EAEAlB,KAAAmJ,WAAAxC,EAAA9H,IAAAmB,KAAAsK,oBAAA3D,IAGA3G,KAAAmJ,WAAAxC,EAAA9H,KATA,GAYAsM,cAAA,SAAAxE,GAIA,OAHA3G,KAAAkL,8BACAlL,KAAAuJ,4BAEArI,IAAAyF,EACA3G,KAAAoJ,iBAEAlI,IAAAyF,EAAA9H,GACAmB,KAAAoJ,YAAAzC,EAAA9H,IAEAmB,KAAAoJ,YAAAzC,IAAA,GAGAyE,oBAAA,WACApL,KAAAsJ,oBACAtJ,KAAAmJ,cACAnJ,KAAAiL,yBAGAzC,KAAA,WACA,SAAA6C,IACAnC,EAAAkC,sBAGA3M,EAAA6H,YAAA,iBAAA+E,GACA5M,EAAA6H,YAAA,iBAAA+E,GACA5M,EAAA6H,YAAA,oBAAA+E,GACA5M,EAAA6H,YAAA,oBAAA+E,GACA5M,EAAA6H,YAAA,iBAAA+E,GACA5M,EAAA6H,YAAA,oBAAA+E,GACA5M,EAAA6H,YAAA,oBAAA+E,GACA5M,EAAA6H,YAAA,eAAA+E,GACA5M,EAAA6H,YAAA,kBAAA+E,KAIA,OAAAnC,wBC3LA1M,EAAA,GAAAA,CAAAiC,OAEA,IAAAyK,EAAA1M,EAAA,IAAAA,CAAAiC,OACAyK,EAAAV,OAEA/J,MAAAkL,aAAA,SAAAhD,GACA,OAAAuC,EAAAS,aAAAhD,IAGAlI,MAAA0M,cAAA,SAAAxE,GACA,OAAAuC,EAAAiC,cAAAxE,IAGA,IAAA2E,EAAA9O,EAAA,IAAAA,CAAAiC,OACAA,MAAAK,OAAAgK,yBAAA,EACAwC,EAAA9C,OAEA/J,MAAA8J,eAAA,SAAA5B,GAEA,OADAlI,MAAA8M,UAAA5E,QAAAzF,IAAAyF,EAAA9H,IAAA,6CACAyM,EAAA/C,eAAA5B,IAGAlI,MAAA+M,eAAA,SAAAb,GACA,OAAA3K,KAAAuI,eAAA9J,MAAA8C,QAAAoJ,EAAAf,UAIAnL,MAAAoM,SAAA,SAAAY,EAAAC,GAKA,IAJA,IAAA7B,EAAA,EACAjK,KACA+L,KAEAtP,EAAA,EAAgBA,EAAAoP,EAAAtM,QAAAY,OAA0B1D,IAC1CsP,EAAAF,EAAAtM,QAAA9C,KAAA,EAEA,IAAAA,EAAA,EAAgBA,EAAAqP,EAAAtM,QAAAW,OAA0B1D,IAC1CsP,EAAAD,EAAAtM,QAAA/C,KACAuD,EAAAM,KAAAwL,EAAAtM,QAAA/C,IAGA,IAAAA,EAAA,EAAgBA,EAAAuD,EAAAG,OAAsB1D,IAAA,CACtC,IAAAsO,EAAA3K,KAAA4K,QAAAhL,EAAAvD,IACAuP,EAAA5L,KAAA6H,UAAA4D,EAAAC,EAAA1L,KAAA6L,4BAAAlB,EAAA9L,GAAA8L,EAAAc,EAAAC,EAAAD,EAAAxD,OAAAyD,EAAAzD,UAEA4B,EAAA+B,GAAA,IAAAvP,KACAwN,EAAA+B,GAIA,OAAA/B,GAGApL,MAAAoJ,UAAA,SAAAlB,EAAAmF,EAAAC,GAEA,IAAA9M,EAAAe,KAAAlB,OAAAG,MAEAgC,EAAA,KAEAA,EADAjB,KAAAgM,YAAArF,EAAA3H,OAAAC,EAAAgN,UACAtF,EAAAE,WAEAF,EAAAG,SAGA,IAAAgE,EAAAgB,EAAAjF,WAEAqF,EAAA,EAEAA,GADAjL,GAAA6J,GACA9K,KAAAmK,mBAAsCtD,WAAAiE,EAAAhE,SAAA7F,EAAA0F,SAEtC3G,KAAAmK,mBAAqCtD,WAAA5F,EAAA6F,SAAAgE,EAAAnE,SAGrC,IAAAwF,EAAAJ,EAAAI,IAKA,OAJAA,GAAA,EAAAA,OACAD,GAAAC,GAGAD,uBC7EA,IAAAjD,EAAAzM,EAAA,GAEAP,EAAAD,QAAA,WACA,OACAoQ,YAAA,SAAAxM,GAGA,IAFA,IACA4B,EADA6K,KAEAhQ,EAAA,EAAAiQ,EAAA1M,EAAAG,OAAyC1D,EAAAiQ,EAASjQ,IAElDgQ,GADA7K,EAAA5B,EAAAvD,IACAuF,QAAAJ,EAAAI,OACAyK,EAAA7K,EAAAoI,QAAApI,EAAAoI,OAGA,IACA/K,EADA0N,KAEA,QAAAlQ,KAAAgQ,EACAxN,EAAAwN,EAAAhQ,GACAkQ,EAAArM,KAAArB,GAGA,OAAA0N,GAEAC,gBAAA,SAAAC,GAIA,IAHA,IAAAF,EAAAvM,KAAAoM,YAAAK,GACA9I,KAEAtH,EAAA,EAAAiQ,EAAAC,EAAAxM,OAAwC1D,EAAAiQ,EAASjQ,IACjDsH,EAAA4I,EAAAlQ,KAAyBwC,GAAA0N,EAAAlQ,GAAA8C,WAAAC,WAAAsN,UAAA,GAGzB,IAAArQ,EAAA,EAAAiQ,EAAAG,EAAA1M,OAAqC1D,EAAAiQ,EAASjQ,IAAA,CAC9C,IAAAsQ,EAAAhJ,EAAA8I,EAAApQ,GAAAuF,QACA+K,EAAAvN,QAAAc,KAAA7D,GACAsQ,EAAAD,UAAAC,EAAAvN,QAAAW,OACA4D,EAAA8I,EAAApQ,GAAAuN,QAAAzK,QAAAe,KAAA7D,GASA,IAJA,IAAAuQ,EAAAL,EAAA3J,OAAA,SAAAiK,GAAuC,OAAAlJ,EAAAkJ,GAAAH,YAEvCI,KAEAF,EAAA7M,QAAA,CACA,IAAA7B,EAAA0O,EAAAvL,MAEAyL,EAAA5M,KAAAhC,GAEA,IAAA6O,EAAApJ,EAAAzF,GAEA,IAAA7B,EAAA,EAAkBA,EAAA0Q,EAAA5N,QAAAY,OAAyB1D,IAAA,CAC3C,IAAAQ,EAAA8G,EAAA8I,EAAAM,EAAA5N,QAAA9C,IAAAuF,QACA/E,EAAA6P,YACA7P,EAAA6P,WACAE,EAAA1M,KAAArD,EAAAgC,KAMA,OAAAiO,GAGAxF,mBAAA,SAAAmF,GAGA,IAFA,IACAO,EADAC,KAEA5Q,EAAA,EAAAiQ,EAAAG,EAAA1M,OAAqC1D,EAAAiQ,EAASjQ,IAE9C4Q,GADAD,EAAAP,EAAApQ,IACAuN,UACAqD,EAAAD,EAAApD,YAEAqD,EAAAD,EAAApD,QAAA1J,KAAA8M,GAEA,OAAAC,GAEAC,kCAAA,SAAAX,EAAAE,GASA,IANA,IAAAU,KACAxF,KACAyF,EAAApN,KAAAsH,mBAAAmF,GACAY,GAAA,EACAC,KAEAjR,EAAA,EAAiBA,EAAAkQ,EAAAxM,OAAqB1D,IAAA,CACtC,IAAAP,EAAAyR,EAAAhB,EAAAlQ,IACA,IAAAP,EAAA+D,QAGA,IAFA,IAAA2N,GAAA1R,GACA2R,EAAA,EACAD,EAAAzN,QAAA,CACA,IAAA8M,EAAAW,EAAAnM,MAEAwL,EAAAhN,UACAgN,EAAAY,QACAZ,EAAAa,QAAAD,EACAA,IACA9F,EAAAzH,KAAA2M,GACAA,EAAAc,SAAA,EACAd,EAAAhN,SAAA,GAEAwN,GAAA,EACAZ,EAAAW,EAAAP,EAAAhO,QACA,IADA,IACA+O,EAAA,EAAmBA,EAAAnB,EAAA1M,OAAkB6N,IAAA,CACrC,IAAA7H,EAAAwH,EAAAd,EAAAmB,GAAAhM,QAEA,GADAmE,EAAAiH,KAAAP,EAAAmB,QACA1M,IAAA6E,EAAA0H,MAAA,CACAD,EAAAtN,KAAA2M,GACAW,EAAAtN,KAAA6F,GACAsH,GAAA,EACA,MACOtH,EAAA4H,UACPd,EAAAa,QAAA3C,KAAA8C,IAAAhB,EAAAa,QAAA3H,EAAA0H,QAGA,IAAAJ,EAAA,CAGA,GAAAR,EAAAY,OAAAZ,EAAAa,QAAA,CAEA,IADA,IAAAI,GAAiBC,SAAA1G,WAEjBtB,EAAA4B,EAAAtG,OACAsM,SAAA,EACAG,EAAAC,MAAA7N,KAAA6F,EAAAlH,IACAkH,EAAAiH,MACAc,EAAAzG,MAAAnH,KAAA6F,EAAAiH,KAAAnO,IAEAkH,GAAA8G,IAKAS,EAAApN,KAAA4N,GAEAN,EAAAzN,SACAgG,EAAA8G,GACAA,EAAAW,IAAAzN,OAAA,IACA2N,QAAA3C,KAAA8C,IAAAhB,EAAAa,QAAA3H,EAAA2H,YAMA,OAAAJ,EAEA,SAAAC,EAAA1O,GAKA,OAJAsO,EAAAtO,KACAsO,EAAAtO,IAAyBA,KAAA8O,SAAA,EAAAF,WAAAvM,EAAAwM,aAAAxM,EAAA8L,UAAA9L,IAGzBiM,EAAAtO,KAIAmP,UAAA,SAAApO,GACA,IAAAqO,KAEAhF,EAAAlG,QAAAnD,EAAA,SAAA4B,GACAA,EAAAI,QAAAJ,EAAAoI,QACAqE,EAAA/N,MAAAsB,EAAAI,OAAAJ,EAAAoI,WAGA,IAAA2C,EAAAvM,KAAAoM,YAAAxM,GAEA0N,EAAAtN,KAAAkN,kCAAAX,EAAA3M,GAOA,OANAqJ,EAAAlG,QAAAuK,EAAA,SAAAY,GACAA,EAAAH,MAAAhO,OAAA,GACAkO,EAAA/N,KAAAgO,KAIAD,uBC1KAhS,EAAAD,QAAA,SAAAyC,GAGAA,EAAA0P,iBAAA,SAAAxD,EAAAyD,GACA,IAAAzH,EAAA,KACA0H,EAAAD,EAAAzD,EAAA/I,OAAA+I,EAAAf,OAMA,OAJAnL,EAAA6C,aAAA+M,KACA1H,EAAAlI,EAAA8C,QAAA8M,IAGA1H,GAEAlI,EAAA6P,iBAAA,SAAA3D,GACA,OAAAlM,EAAA0P,iBAAAxD,GAAA,IAGAlM,EAAA8P,iBAAA,SAAA5D,GACA,OAAAlM,EAAA0P,iBAAAxD,GAAA,IAGA,IAAA6D,GAAA,EACAC,KACAC,KACAC,KACAC,KAGAnQ,EAAAiB,qBAAA,WACA,OAAA8O,GAEA/P,EAAAkB,iBAAA,WACA8O,KACAC,KACAC,KACAC,KACAJ,GAAA,GAEA/P,EAAA0B,eAAA,WACAsO,KACAC,KACAC,KACAC,KACAJ,GAAA,GAGA/P,EAAAoQ,YAAA,SAAAlE,GAGA,GAAA6D,GAAAC,EAAA9D,EAAA9L,IACA,OAAA4P,EAAA9D,EAAA9L,IAGA,IAAAe,KACAgC,EAAA5B,KAAAsO,iBAAA3D,GACAf,EAAA5J,KAAAuO,iBAAA5D,GAEA,IAAAf,IAAAhI,EACA,OAAAhC,EAGA,GAAAnB,EAAA6J,cAAA1G,IAAAnD,EAAAqQ,UAAAlF,EAAA/K,GAAA+C,EAAA/C,KAAAJ,EAAA6J,cAAAsB,IAAAnL,EAAAqQ,UAAAlN,EAAA/C,GAAA+K,EAAA/K,IACA,OAAAe,EAoCA,IA1BA,IAAAqB,EAAAjB,KAAA+O,kBAAApE,EAAAf,EAAA,SAAA9M,GACA,WACG,GAEHkS,EAAAvQ,EAAAK,OAAAmQ,8BACAC,EAAAlP,KAAAsI,cAAA1G,GAAA5B,KAAApB,gBAAAgD,EAAA/C,KACAgI,WAAAjF,EAAAiF,WACAC,SAAAlF,EAAAkF,UAEAgE,EAAA9K,KAAA+O,kBAAApE,EAAA/I,EAAA,SAAA9E,GACA,OAAAkS,EAIAlS,EAAAsC,QAAAW,QAAAtB,EAAA0Q,WAAAC,SAAAtS,EAAA+B,GAOA,EANAJ,EAAA0L,mBACAtD,WAAAqI,EAAArI,WACAC,SAAAhK,EAAA+J,WACAF,KAAAiD,IAPA,IAeAvN,EAAA,EAAAgT,EAAApO,EAAAlB,OAA2C1D,EAAAgT,EAAgBhT,IAE3D,IADA,IAAAiT,EAAArO,EAAA5E,GACAkT,EAAA,EAAAC,EAAA1E,EAAA/K,OAAwCwP,EAAAC,EAAcD,IAAA,CACtD,IAAAE,EAAA3E,EAAAyE,GAEApD,EAAA,EAAAmD,EAAAnD,IAAA,EAAAsD,EAAAtD,IAEAuD,GACA7Q,GAAA8L,EAAA9L,GACAG,KAAA2L,EAAA3L,KACA4K,OAAA0F,EAAA3I,KACA/E,OAAA6N,EAAA9I,KACAwF,KAAA,EAAAxB,EAAAwB,KAAA,GAAAA,GAGAvM,EAAAM,KAAAzB,EAAAoN,4BAAA4D,EAAA9I,KAAA+I,EAAA9F,EAAAhI,EAAA0N,EAAAK,WAAAF,EAAAE,aAOA,OAHAnB,IACAC,EAAA9D,EAAA9L,IAAAe,GAEAA,GAGAnB,EAAAmR,mBAAA,SAAAjJ,GACA,WAAAA,EAAAkJ,iBAGApR,EAAAsQ,kBAAA,SAAApE,EAAA1C,EAAA6H,EAAAC,GACA,IAAAnQ,KAEA,GAAAI,KAAAsI,cAAAL,GAAA,CAKA,IAOA+H,EAPAlO,KASA,QAAAhF,KARAkD,KAAAqI,SAAA,SAAAvL,GACAkD,KAAAsI,cAAAxL,KACAgF,EAAAhF,EAAA+B,IAAA/B,IAEImL,EAAApJ,IAIJiD,EAAA,CACA,IAAA6E,EAAA7E,EAAAhF,GACAmT,EAAAF,EAAApJ,EAAAxH,QAAAwH,EAAAvH,QAEA4Q,GAAA,EAEA,QAAAtT,EAAA,EAAmBA,EAAAuT,EAAAlQ,OAA4BrD,IAAA,CAC/C,IAAAwT,EAAAzR,EAAAmM,QAAAqF,EAAAvT,IACAyT,EAAAJ,EAAAG,EAAAtO,OAAAsO,EAAAtG,OACAwG,EAAAtO,EAAAqO,GACA,GAAAC,IAAA,IAAAzJ,EAAAkJ,kBAAA,IAAAO,EAAAP,kBACAK,EAAAtO,QAAAwO,EAAAvR,IAAAkM,KAAAsF,IAAAH,EAAA/D,MAAAiE,EAAAlE,UACAgE,EAAAtO,QAAA+E,EAAA9H,IAAAkM,KAAAsF,IAAAH,EAAA/D,MAAAxF,EAAAuF,UAAA,CACA8D,GAAA,EACA,OAIAA,GACApQ,EAAAM,MAAqByG,OAAA9H,GAAA8Q,WAAAhJ,EAAAsB,OAAAkE,IAAA2D,EAAAnJ,WAKrB/G,EAAAM,MAAmByG,KAAAsB,EAAApJ,GAAA8Q,WAAA1H,SAAAkE,IAAA,IAGnB,OAAAvM,GAGAnB,EAAA6R,uBAAA,SAAA3J,EAAA4J,GAOA,IALA,IAAAlJ,KACA5G,KAEA+P,EAAAD,EAAA5J,EAAAxH,QAAAwH,EAAAvH,QAEA/C,EAAA,EAAiBA,EAAAmU,EAAAzQ,OAAqB1D,IAAA,CACtC,IAAAsO,EAAA3K,KAAA4K,QAAA4F,EAAAnU,IACA,GAAA2D,KAAAsB,aAAAqJ,EAAAf,SAAA5J,KAAAsB,aAAAqJ,EAAA/I,QAAA,CACA,IAAAA,EAAA5B,KAAAuB,QAAAoJ,EAAA/I,QACA5B,KAAA4P,mBAAAhO,IACAyF,EAAAnH,KAAAF,KAAA4K,QAAA4F,EAAAnU,MAKA,IAAAA,EAAA,EAAiBA,EAAAgL,EAAAtH,OAAkB1D,IACnCoE,IAAAgQ,OAAAzQ,KAAA6O,YAAAxH,EAAAhL,KAGA,OAAAoE,GAGAhC,EAAAiS,0BAAA,SAAA/J,EAAA4J,GAGA,IAEAI,EAFAC,GAAA,EACAC,KAgCA,OA9BA7Q,KAAAsB,aAAAqF,EAAA9H,KACAmB,KAAA8Q,WAAA,SAAA7I,GAYA,IAAA8I,EAXAH,IAGApC,IACAmC,EAAAJ,EAAA7B,EAAAC,GACA1G,EAAApJ,IACAgS,IAAAJ,OAAAE,EAAA1I,EAAApJ,KAMAmB,KAAAsI,cAAAL,KACAjI,KAAA4P,mBAAA3H,IAGA8I,EAAA/Q,KAAAsQ,uBAAArI,EAAAsI,GACA/B,IACAmC,EAAA1I,EAAApJ,IAAAkS,GAGAF,IAAAJ,OAAAM,IAPAH,GAAA,KAWIjK,EAAA9H,GAAAmB,MAGJ6Q,GAIApS,EAAAuS,qBAAA,SAAArK,GACA,OAAA3G,KAAAsQ,uBAAA3J,GAAA,IAGAlI,EAAAwS,wBAAA,SAAAtK,GACA,OAAA3G,KAAA0Q,0BAAA/J,GAAA,IAGAlI,EAAAyS,uBAAA,SAAAvK,GACA,OAAA3G,KAAAsQ,uBAAA3J,GAAA,IAGAlI,EAAA0S,0BAAA,SAAAxK,GACA,OAAA3G,KAAA0Q,0BAAA/J,GAAA,IAGAlI,EAAAiC,eAAA,SAAAiG,EAAAyK,GACA,IAAA3Q,EAAAT,KAAAgR,qBAAArK,GACA,OAAAyK,EACA3Q,EAEAA,EAAAgQ,OAAAzQ,KAAAiR,wBAAAtK,KAIAlI,EAAAmC,iBAAA,SAAA+F,EAAAyK,GACA,IACAtR,EADA9B,EAAA2I,EAAA9H,GAAAuS,EAGA,GAAA5C,GAAAI,EAAA5Q,GACA,OAAA4Q,EAAA5Q,GAGA,IAAA2C,EAAAX,KAAAkR,uBAAAvK,GASA,OAPA7G,EADAsR,EACAzQ,EAEAA,EAAA8P,OAAAzQ,KAAAmR,0BAAAxK,IAEA6H,IACAI,EAAA5Q,GAAA8B,GAEAA,GAIArB,EAAAoN,4BAAA,SAAAhN,EAAA8L,EAAA0G,EAAAC,EAAA5P,EAAAC,GAEA,IAAAsL,GACArL,OAAA/C,EACA8L,KAAAlM,EAAAK,OAAAuI,MAAAkK,gBACA1S,GAAA8L,EAAA9L,GACAsN,IAAAxB,EAAAwB,KAAA,EACAvC,OAAAe,EAAAf,OACA4H,eAAA,KACA9P,eACAC,eACAd,QAAA,MAGA4Q,EAAA,EACA,OAAA9G,EAAA3L,MACA,KAAAP,EAAAK,OAAAuI,MAAAqK,eACAD,GAAAJ,EAAAnF,SACA,MACA,KAAAzN,EAAAK,OAAAuI,MAAAsK,iBACAF,GAAAH,EAAApF,SACA,MACA,KAAAzN,EAAAK,OAAAuI,MAAAuK,gBACAH,GAAAJ,EAAAnF,SAAAoF,EAAApF,SACA,MACA,QACAuF,EAAA,EAKA,OAFAxE,EAAAd,KAAAsF,EACAxE,EAAApM,QAAAoM,EAAAd,IAAA,IAAAc,EAAAtC,KAAA,IAAAsC,EAAArD,OAAA,IAAAqD,EAAArL,OACAqL","file":"ext/dhtmlxgantt_critical_path.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/codebase/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 247);\n","module.exports = function(gantt) {\n\treturn {\n\t\tgetVirtualRoot: function(){\n\t\t\treturn gantt.mixin(\n\t\t\t\tgantt.getSubtaskDates(),\n\t\t\t\t{\n\t\t\t\t\tid: gantt.config.root_id,\n\t\t\t\t\ttype: gantt.config.types.project,\n\t\t\t\t\t$source: [],\n\t\t\t\t\t$target: [],\n\t\t\t\t\t$virtual: true\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\t\n\t\tgetLinkedTasks: function(id, includePredecessors){\n\t\t\tvar startIds = [id];\n\t\n\t\t\t//TODO: format links cache\n\t\t\tvar clearCache = false;\n\t\t\tif(!gantt._isLinksCacheEnabled()) {\n\t\t\t\tgantt._startLinksCache();\n\t\t\t\tclearCache = true;\n\t\t\t}\n\t\t\tvar relations = [];\n\t\t\tvar visited = {};\n\t\t\tvar result = {};\n\t\t\tfor(var i = 0; i < startIds.length; i++){\n\t\t\t\tthis._getLinkedTasks(startIds[i], visited, includePredecessors, result);\n\t\t\t}\n\t\n\t\t\tfor(var i in result){\n\t\t\t\trelations.push(result[i]);\n\t\t\t}\n\t\n\t\t\t//TODO: remove redundant edges before continue https://en.wikipedia.org/wiki/Transitive_reduction\n\t\t\tif(clearCache)\n\t\t\t\tgantt._endLinksCache();\n\t\t\treturn relations;\n\t\t},\n\t\n\t\t_collectRelations: function(rootObj, isChild, includePredecessors, visitedLinks){\n\t\t\tvar successors = gantt._getSuccessors(rootObj, isChild);\n\t\n\t\t\tvar predecessors = [];\n\t\t\tif (includePredecessors) {\n\t\t\t\tpredecessors = gantt._getPredecessors(rootObj, isChild);\n\t\t\t}\n\t\t\t\n\t\t\tvar linkKey;\n\t\t\tvar relations = [];\n\t\t\tfor(var i = 0; i < successors.length; i++){\n\t\t\t\tlinkKey = successors[i].hashSum;\n\t\t\t\tif(visitedLinks[linkKey]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\tvisitedLinks[linkKey] = true;\n\t\t\t\t\trelations.push(successors[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(var i = 0; i < predecessors.length; i++){\n\t\t\t\tlinkKey = predecessors[i].hashSum;\n\t\t\t\tif(visitedLinks[linkKey]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}else{\n\t\t\t\t\tvisitedLinks[linkKey] = true;\n\t\t\t\t\trelations.push(predecessors[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn relations;\n\t\t},\n\t\t_getLinkedTasks: function(rootTask, visitedTasks, includePredecessors, output) {\n\t\t\tvar from = rootTask === undefined ? gantt.config.root_id : rootTask;\n\t\t\tvar visitedTasks = {};\n\t\t\tvar visitedLinks = {};\n\t\t\tvar rootObj;\n\t\n\t\t\tvar tasksStack = [{from: from, includePredecessors: includePredecessors, isChild:false}];\n\t\n\t\t\twhile(tasksStack.length){\n\t\t\t\tvar current = tasksStack.pop();\n\t\t\t\tvar isChild = current.isChild;\n\t\n\t\t\t\tfrom = current.from;\n\t\t\t\tif(visitedTasks[from]){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trootObj = gantt.isTaskExists(from) ? gantt.getTask(from) : this.getVirtualRoot();\n\t\t\t\tvisitedTasks[from] = true;\n\t\t\t\t\n\t\t\t\tvar relations = this._collectRelations(rootObj, isChild, includePredecessors, visitedLinks);\n\t\n\t\t\t\tfor(var i=0; i < relations.length; i++){\n\t\t\t\t\tvar rel = relations[i];\n\t\t\t\t\toutput[rel.hashSum] = rel;\n\t\t\t\t\tvar isSameParent = rel.sourceParent == rel.targetParent;\n\t\t\t\t\tvar targetTask = rel.target;\n\t\t\t\t\tif(!visitedTasks[targetTask])\n\t\t\t\t\t\ttasksStack.push({from: rel.target, includePredecessors: true, isChild: isSameParent});\n\t\t\t\t}\n\t\n\t\t\t\tif(gantt.hasChild(rootObj.id)){\n\t\t\t\t\tvar children = gantt.getChildren(rootObj.id);\n\t\t\t\t\tfor(var i=0; i < children.length; i++){\n\t\t\t\t\t\tif(!visitedTasks[children[i]])\n\t\t\t\t\t\t\ttasksStack.push({from: children[i], includePredecessors: true, isChild: true});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn output;\n\t\t}\n\t};\n};","var units = {\n\t\"second\": 1,\n\t\"minute\": 60,\n\t\"hour\": 60 * 60,\n\t\"day\": 60 * 60 * 24,\n\t\"week\": 60 * 60 * 24 * 7,\n\t\"month\": 60 * 60 * 24 * 30,\n\t\"quarter\": 60 * 60 * 24 * 30 * 3,\n\t\"year\": 60 * 60 * 24 * 365\n};\nfunction getSecondsInUnit(unit){\n\treturn units[unit] || units.hour;\n}\n\nfunction forEach(arr, callback) {\n\tif (arr.forEach) {\n\t\tarr.forEach(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tcallback(workArray[i], i);\n\t\t}\n\t}\n}\n\nfunction arrayMap(arr, callback) {\n\tif (arr.map) {\n\t\treturn arr.map(callback);\n\t} else {\n\t\tvar workArray = arr.slice();\n\t\tvar resArray = [];\n\n\t\tfor (var i = 0; i < workArray.length; i++) {\n\t\t\tresArray.push(callback(workArray[i], i));\n\t\t}\n\t\treturn resArray;\n\t}\n}\n\n\nfunction arrayFind(arr, callback) {\n\tif (arr.find) {\n\t\treturn arr.find(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\treturn arr[i];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// iframe-safe array type check instead of using instanceof\nfunction isArray(obj){\n\tif(Array.isArray){\n\t\treturn Array.isArray(obj);\n\t}else{\n\t\t// close enough\n\t\treturn (obj && obj.length !== undefined && obj.pop && obj.push);\n\t}\n}\n\n// non-primitive string object, e.g. new String(\"abc\")\nfunction isStringObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function String() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Number(5)\nfunction isNumberObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Number() { [native code] }\";\n}\n\n// non-primitive number object, e.g. new Boolean(true)\nfunction isBooleanObject(obj){\n\treturn obj && typeof obj === \"object\"\n\t\t&& Function.prototype.toString.call(obj.constructor) === \"function Boolean() { [native code] }\";\n}\n\nfunction isDate(obj) {\n\tif (obj && typeof obj === \"object\") {\n\t\treturn !!(obj.getFullYear && obj.getMonth && obj.getDate);\n\t} else {\n\t\treturn false;\n\t}\n}\n\nfunction arrayFilter(arr, callback) {\n\tvar result = [];\n\n\tif (arr.filter) {\n\t\treturn arr.filter(callback);\n\t} else {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (callback(arr[i], i)) {\n\t\t\t\tresult[result.length] = arr[i];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nfunction hashToArray(hash) {\n\tvar result = [];\n\n\tfor (var key in hash) {\n\t\tif (hash.hasOwnProperty(key)) {\n\t\t\tresult.push(hash[key]);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction arraySome(arr, callback) {\n\tif (arr.length === 0) return false;\n\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tif (callback(arr[i], i, arr)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction arrayDifference(arr, callback) {\n\treturn arrayFilter(arr, function(item, i) {\n\t\treturn !callback(item, i);\n\t});\n}\n\nfunction throttle (callback, timeout) {\n\tvar wait = false;\n\n\treturn function () {\n\t\tif (!wait) {\n\t\t\tcallback.apply(null, arguments);\n\t\t\twait = true;\n\t\t\tsetTimeout(function () {\n\t\t\t\twait = false;\n\t\t\t}, timeout);\n\t\t}\n\t};\n}\n\nfunction delay (callback, timeout){\n\tvar timer;\n\n\tvar result = function() {\n\t\tresult.$cancelTimeout();\n\t\tcallback.$pending = true;\n\t\tvar args = Array.prototype.slice.call(arguments);\n\t\ttimer = setTimeout(function(){\n\t\t\tcallback.apply(this, args);\n\t\t\tresult.$pending = false;\n\t\t}, timeout);\n\t};\n\t\n\tresult.$pending = false;\n\tresult.$cancelTimeout = function(){\n\t\tclearTimeout(timer);\n\t\tcallback.$pending = false;\n\t};\n\tresult.$execute = function(){\n\t\tcallback();\n\t\tcallback.$cancelTimeout();\n\t};\n\n\treturn result;\n}\n\nfunction sortArrayOfHash(arr, field, desc) {\n\tvar compare = function(a, b) {\n\t\treturn a < b;\n\t};\n\n\tarr.sort(function(a, b) {\n\t\tif (a[field] === b[field]) return 0;\n\n\t\treturn desc ? compare(a[field], b[field]) : compare(b[field], a[field]);\n\t});\n}\n\nfunction objectKeys(obj) {\n\tif (Object.keys) {\n\t\treturn Object.keys(obj);\n\t}\n\tvar result = [];\n\tvar key;\n\tfor (key in obj) {\n\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\tresult.push(key);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction requestAnimationFrame(callback) {\n\tvar w = window;\n\tvar foundRequestAnimationFrame = w.requestAnimationFrame\n\t\t|| w.webkitRequestAnimationFrame\n\t\t|| w.msRequestAnimationFrame\n\t\t|| w.mozRequestAnimationFrame\n\t\t|| w.oRequestAnimationFrame\n\t\t|| function(cb) { setTimeout(cb, 1000/60); };\n\treturn foundRequestAnimationFrame(callback);\n}\n\nfunction isEventable(obj) {\n\treturn obj.attachEvent && obj.detachEvent;\n}\n\nmodule.exports = {\n\tgetSecondsInUnit: getSecondsInUnit,\n\tforEach: forEach,\n\tarrayMap: arrayMap,\n\tarrayFind: arrayFind,\n\tarrayFilter: arrayFilter,\n\tarrayDifference: arrayDifference,\n\tarraySome: arraySome,\n\thashToArray: hashToArray,\n\tsortArrayOfHash: sortArrayOfHash,\n\tthrottle: throttle,\n\tisArray: isArray,\n\tisDate: isDate,\n\tisStringObject: isStringObject,\n\tisNumberObject: isNumberObject,\n\tisBooleanObject: isBooleanObject,\n\tdelay: delay,\n\tobjectKeys: objectKeys,\n\trequestAnimationFrame: requestAnimationFrame,\n\tisEventable: isEventable\n};","var linksBuilder = require(\"../../core/relations/links_builder\")(gantt);\nvar graphHelper = require(\"../../core/relations/graph_helper\")(gantt);\n\nmodule.exports = function(gantt){\n\n\tgantt._isProjectEnd = function(task) {\n\t\treturn !(this._hasDuration({\n\t\t\tstart_date: task.end_date,\n\t\t\tend_date: this._getProjectEnd(),\n\t\t\ttask: task\n\t\t}));\n\t};\n\n\treturn {\n\t\t_needRecalc: true,\n\t\t_cache: null,\n\t\treset: function(){\n\t\t\tthis._needRecalc = true;\n\t\t\tthis._cache = null;\n\t\t},\n\t\t_isRecalcNeeded: function(){\n\t\t\treturn this._needRecalc;\n\t\t},\n\t\t_getLinks: function(){\n\t\t\tvar links = linksBuilder.getLinkedTasks();\n\t\t\treturn graphHelper.groupAdjacentEdges(links);\n\t\t},\n\t\t_calculateBranch: function(task, path, criticalTasks, adjacentLinks){\n\t\t\tpath[task.id] = true;\n\t\t\tif(criticalTasks[task.id] !== undefined){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar stack = [task];\n\n\t\t\twhile(stack.length) {\n\t\t\t\ttask = stack.pop();\n\n\t\t\t\tif(criticalTasks[task.id] || gantt._isProjectEnd(task)){\n\t\t\t\t\tcriticalTasks[task.id] = true;\n\t\t\t\t\twhile(stack.length){\n\t\t\t\t\t\tvar task = stack.pop();\n\t\t\t\t\t\tcriticalTasks[task.id] = true;\n\t\t\t\t\t}\n\t\t\t\t}else {\n\t\t\t\t\tcriticalTasks[task.id] = false;\n\t\t\t\t\tvar successors = adjacentLinks[task.id] || [];\n\t\t\t\t\tfor (var i = 0; i < successors.length; i++) {\n\n\t\t\t\t\t\tvar next = gantt.getTask(successors[i].target);\n\t\t\t\t\t\tif (gantt._getSlack(task, next, successors[i]) <= 0 && (!path[next.id] || criticalTasks[next.id])) {\n\t\t\t\t\t\t\tpath[next.id] = true;\n\n\t\t\t\t\t\t\tstack.push(task);\n\t\t\t\t\t\t\tstack.push(next);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_calculateSummaryTasks: function(summaryHash, criticalHash){\n\t\t\tfor(var i in criticalHash){\n\t\t\t\tif(criticalHash[i]){\n\t\t\t\t\tvar parent = gantt.getParent(i);\n\t\t\t\t\twhile(summaryHash[parent] === undefined && gantt.isTaskExists(parent)){\n\t\t\t\t\t\tsummaryHash[parent] = true;\n\t\t\t\t\t\tparent = gantt.getParent(parent);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor(var i in summaryHash){\n\t\t\t\tcriticalHash[i] = !!summaryHash[i];\n\t\t\t}\n\t\t},\n\n\t\t_calculate: function calculateCriticalPath(){\n\t\t\tvar criticalTasks = {};\n\t\t\tvar clearCache = false;\n\t\t\tvar path = {};\n\t\t\tif(!gantt._isLinksCacheEnabled()) {\n\t\t\t\tgantt._startLinksCache();\n\t\t\t\tclearCache = true;\n\t\t\t}\n\t\t\tvar links = this._getLinks();\n\n\t\t\tvar summaryTasks = {};\n\t\t\tgantt.eachTask(function(task){\n\t\t\t\tif(path[task.id])\n\t\t\t\t\treturn;\n\t\t\t\tif(gantt.isSummaryTask(task)){\n\t\t\t\t\tsummaryTasks[task.id] = undefined;\n\t\t\t\t}else{\n\t\t\t\t\tthis._calculateBranch(task, path, criticalTasks, links);\n\t\t\t\t}\n\t\t\t}, gantt.config.root_id, this);\n\n\t\t\tthis._calculateSummaryTasks(summaryTasks, criticalTasks);\n\n\t\t\tif(clearCache)\n\t\t\t\tgantt._endLinksCache();\n\t\t\treturn criticalTasks;\n\t\t},\n\n\t\tisCriticalTask: function(task) {\n\t\t\tif(!task) return false;\n\n\t\t\tif(this._isRecalcNeeded()){\n\t\t\t\tthis._cache = this._calculate();\n\t\t\t\tthis._needRecalc = false;\n\t\t\t}\n\n\t\t\treturn this._cache[task.id];\n\t\t},\n\n\t\tinit: function(){\n\t\t\tvar resetCache = gantt.bind(function(){\n\t\t\t\tthis.reset();\n\t\t\t\treturn true;\n\t\t\t}, this);\n\n\t\t\tvar handleTaskIdChange = gantt.bind(function (oldId, newId) {\n\t\t\t\tif (this._cache) {\n\t\t\t\t\tthis._cache[newId] = this._cache[oldId];\n\t\t\t\t\tdelete this._cache[oldId];\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}, this);\n\n\t\t\tgantt.attachEvent(\"onAfterLinkAdd\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterLinkUpdate\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterLinkDelete\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterTaskAdd\", resetCache);\n\t\t\tgantt.attachEvent(\"onTaskIdChange\", handleTaskIdChange);\n\t\t\tgantt.attachEvent(\"onAfterTaskUpdate\", resetCache);\n\t\t\tgantt.attachEvent(\"onAfterTaskDelete\", resetCache);\n\t\t\tgantt.attachEvent(\"onParse\", resetCache);\n\t\t\tgantt.attachEvent(\"onClearAll\", resetCache);\n\n\n\t\t\tvar criticalPathHandler = function(){\n\t\t\t\tif(gantt.config.highlight_critical_path)\n\t\t\t\t\tgantt.render();\n\t\t\t};\n\t\t\tgantt.attachEvent(\"onAfterLinkAdd\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkUpdate\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkDelete\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskAdd\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onTaskIdChange\", function (oldId, newId) {\n\t\t\t\tif (gantt.config.highlight_critical_path && gantt.isTaskExists(newId)) {\n\t\t\t\t\tgantt.refreshTask(newId);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t\tgantt.attachEvent(\"onAfterTaskUpdate\", criticalPathHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskDelete\", criticalPathHandler);\n\t\t}\n\t};\n};","var linksBuilder = require(\"../../core/relations/links_builder\")(gantt);\nvar helpers = require(\"../../utils/helpers\");\n\nmodule.exports = function(gantt) {\n\tvar _private = {\n\t\t_freeSlack: {},\n\t\t_totalSlack: {},\n\t\t_slackNeedCalculate: true,\n\t\t_linkedTasksById: {},\n\t\t_calculateTotalSlack: function() {\n\t\t\tvar linksByTaskId = this._linkedTasksById;\n\n\t\t\thelpers.forEach(linksBuilder.getLinkedTasks(), function(entry) {\n\t\t\t\tvar task = gantt.getTask(entry.target);\n\t\t\t\tvar slack = gantt.getFreeSlack(task);\n\n\t\t\t\tif (!linksByTaskId[entry.source]) {\n\t\t\t\t\tlinksByTaskId[entry.source] = {\n\t\t\t\t\t\tminSlack: {\n\t\t\t\t\t\t\ttarget: entry.target,\n\t\t\t\t\t\t\tslack: slack\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlinked: []\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tif (slack < linksByTaskId[entry.source].minSlack.slack) {\n\t\t\t\t\t\tlinksByTaskId[entry.source].minSlack = {\n\t\t\t\t\t\t\ttarget: entry.target,\n\t\t\t\t\t\t\tslack: slack\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlinksByTaskId[entry.source].linked.push({\n\t\t\t\t\ttarget: entry.target,\n\t\t\t\t\tslack: slack\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tvar totalSlackByTaskId = {};\n\n\t\t\tgantt.eachTask(function(entry) {\n\t\t\t\tif (gantt.isSummaryTask(entry)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (totalSlackByTaskId[entry.id] === undefined) {\n\t\t\t\t\ttotalSlackByTaskId[entry.id] = 0;\n\t\t\t\t}\n\t\t\t\ttotalSlackByTaskId[entry.id] += _private._chainSlackCount(entry);\n\t\t\t});\n\n\t\t\tgantt._slacksChanged = false;\n\t\t\tthis._slackNeedCalculate = false;\n\t\t\tthis._totalSlack = totalSlackByTaskId;\n\n\t\t\treturn totalSlackByTaskId;\n\t\t},\n\t\t_chainSlackCount: function(entry, additional) {\n\t\t\tadditional = additional || 0;\n\t\t\tswitch (true) {\n\t\t\tcase (!this._linkedTasksById[entry.id]):\n\t\t\t\treturn gantt.calculateDuration(entry.end_date, gantt.getSubtaskDates().end_date) + additional;\n\t\t\tcase (this._linkedTasksById[entry.id].linked.length === 1):\n\t\t\t\treturn this._chainSlackCount(gantt.getTask(this._linkedTasksById[entry.id].linked[0].target), gantt.getFreeSlack(entry)) + additional;\n\t\t\tcase (this._linkedTasksById[entry.id].linked.length > 1):\n\t\t\t\tvar targetWithMinimalSlack = this._getTargetWithMinimalSlack(this._linkedTasksById[entry.id].linked);\n\n\t\t\t\treturn this._chainSlackCount(gantt.getTask(targetWithMinimalSlack.target), gantt.getFreeSlack(entry)) + additional;\n\t\t\t}\n\t\t},\n\n\t\t_getTargetWithMinimalSlack: function(linked) {\n\t\t\tvar result;\n\t\t\thelpers.forEach(linked, function(entry) {\n\t\t\t\tif (result === undefined || entry.slack < result.slack) {\n\t\t\t\t\tresult = entry;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t},\n\n\t\t_calculateTaskSlack: function(task) {\n\t\t\tvar slack;\n\n\t\t\tif (task.$source && task.$source.length) {\n\t\t\t\tslack = this._calculateRelationSlack(task);\n\t\t\t} else {\n\t\t\t\tslack = this._calculateHierarchySlack(task);\n\t\t\t}\n\n\t\t\treturn slack;\n\t\t},\n\n\t\t_calculateRelationSlack: function(task) {\n\t\t\tvar minSlack = 0,\n\t\t\t\tslack,\n\t\t\t\tlinks = task.$source;\n\n\t\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\t\tslack = this._calculateLinkSlack(links[i]);\n\t\t\t\tif (minSlack > slack || i === 0) {\n\t\t\t\t\tminSlack = slack;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn minSlack;\n\t\t},\n\n\t\t_calculateLinkSlack: function(linkId) {\n\t\t\tvar link = gantt.getLink(linkId);\n\t\t\tvar slack = 0;\n\t\t\tif (gantt.isTaskExists(link.source) && gantt.isTaskExists(link.target)) {\n\t\t\t\tslack = gantt.getSlack(gantt.getTask(link.source), gantt.getTask(link.target));\n\t\t\t}\n\t\t\treturn slack;\n\t\t},\n\n\t\t_calculateHierarchySlack: function(task) {\n\t\t\tvar slack = 0;\n\t\t\tvar from;\n\t\t\tvar to = gantt.getSubtaskDates().end_date;\n\t\t\tif (gantt.isTaskExists(task.parent)) {\n\t\t\t\tfrom = gantt.getSubtaskDates(task.id).end_date || task.end_date;\n\t\t\t} else {\n\t\t\t\tfrom = task.end_date;\n\t\t\t}\n\t\t\tslack = Math.max(gantt.calculateDuration(from, to), 0);\n\t\t\treturn slack;\n\t\t},\n\n\t\t_resetTotalSlackCache: function() {\n\t\t\tthis._slackNeedCalculate = true;\n\t\t},\n\n\t\t_shouldCalculateTotalSlack: function() {\n\t\t\treturn this._slackNeedCalculate;\n\t\t},\n\n\t\tgetFreeSlack: function(task) {\n\t\t\tif (!gantt.isTaskExists(task.id)) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (!this._freeSlack[task.id]) {\n\t\t\t\tif (gantt.isSummaryTask(task)) {\n\t\t\t\t\tthis._freeSlack[task.id] = undefined;\n\t\t\t\t} else {\n\t\t\t\t\tthis._freeSlack[task.id] =  this._calculateTaskSlack(task);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._freeSlack[task.id];\n\t\t},\n\n\t\tgetTotalSlack: function(task) {\n\t\t\tif (this._shouldCalculateTotalSlack()) {\n\t\t\t\tthis._calculateTotalSlack();\n\t\t\t}\n\t\t\tif (task === undefined) {\n\t\t\t\treturn this._totalSlack;\n\t\t\t}\n\t\t\tif (task.id !== undefined) {\n\t\t\t\treturn this._totalSlack[task.id];\n\t\t\t}\n\t\t\treturn this._totalSlack[task] || 0;\n\t\t},\n\n\t\tdropCachedFreeSlack: function() {\n\t\t\tthis._linkedTasksById = {};\n\t\t\tthis._freeSlack =  {};\n\t\t\tthis._resetTotalSlackCache();\n\t\t},\n\n\t\tinit: function(){\n\t\t\tfunction slackHandler(){\n\t\t\t\t_private.dropCachedFreeSlack();\n\t\t\t}\n\n\t\t\tgantt.attachEvent(\"onAfterLinkAdd\", slackHandler);\n\t\t\tgantt.attachEvent(\"onTaskIdChange\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkUpdate\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterLinkDelete\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskAdd\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskUpdate\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskDelete\", slackHandler);\n\t\t\tgantt.attachEvent(\"onRowDragEnd\", slackHandler);\n\t\t\tgantt.attachEvent(\"onAfterTaskMove\", slackHandler);\n\t\t}\n\t};\n\n\treturn _private;\n};","require(\"../core/relations/links_common\")(gantt);\n\nvar _private = require(\"./critical_path/slack\")(gantt);\n_private.init();\n\ngantt.getFreeSlack = function(task) {\n\treturn _private.getFreeSlack(task);\n};\n\ngantt.getTotalSlack = function(task) {\n\treturn _private.getTotalSlack(task);\n};\n\nvar criticalPath = require(\"./critical_path/critical_path\")(gantt);\ngantt.config.highlight_critical_path = false;\ncriticalPath.init();\n\ngantt.isCriticalTask = function (task) {\n\tgantt.assert(!!(task && task.id !== undefined), \"Invalid argument for gantt.isCriticalTask\");\n\treturn criticalPath.isCriticalTask(task);\n};\n\ngantt.isCriticalLink = function (link) {\n\treturn this.isCriticalTask(gantt.getTask(link.source));\n};\n\n\ngantt.getSlack = function(task1, task2) {\n\tvar minSlack = 0;\n\tvar relations = [];\n\tvar common = {};\n\n\tfor (var i = 0; i < task1.$source.length; i++) {\n\t\tcommon[task1.$source[i]] = true;\n\t}\n\tfor (var i = 0; i < task2.$target.length; i++) {\n\t\tif(common[task2.$target[i]])\n\t\t\trelations.push(task2.$target[i]);\n\t}\n\n\tfor (var i = 0; i < relations.length; i++) {\n\t\tvar link = this.getLink(relations[i]);\n\t\tvar newSlack = this._getSlack(task1, task2, this._convertToFinishToStartLink(link.id, link, task1, task2, task1.parent, task2.parent));\n\n\t\tif (minSlack > newSlack || i === 0) {\n\t\t\tminSlack = newSlack;\n\t\t}\n\t}\n\n\treturn minSlack;\n};\n\ngantt._getSlack = function (task, next_task, relation) {\n\t// relation - link expressed as finish-to-start (gantt._convertToFinishToStartLink)\n\tvar types = this.config.types;\n\n\tvar from = null;\n\tif (this.getTaskType(task.type) == types.milestone) {\n\t\tfrom = task.start_date;\n\t} else {\n\t\tfrom = task.end_date;\n\t}\n\n\tvar to = next_task.start_date;\n\n\tvar duration = 0;\n\tif (+from > +to) {\n\t\tduration = -this.calculateDuration({start_date: to, end_date: from, task: task});\n\t} else {\n\t\tduration = this.calculateDuration({start_date: from, end_date: to, task: task});\n\t}\n\n\tvar lag = relation.lag;\n\tif (lag && lag*1 == lag) {\n\t\tduration -= lag;\n\t}\n\n\treturn duration;\n};\n\n\n\n","var helpers = require(\"../../utils/helpers\");\n\nmodule.exports = function(){\n\treturn {\n\t\tgetVertices: function(relations){\n\t\t\tvar ids = {};\n\t\t\tvar rel;\n\t\t\tfor(var i = 0, len = relations.length; i < len; i++){\n\t\t\t\trel = relations[i];\n\t\t\t\tids[rel.target] = rel.target;\n\t\t\t\tids[rel.source] = rel.source;\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\t\t\tvar id;\n\t\t\tfor(var i in ids){\n\t\t\t\tid = ids[i];\n\t\t\t\tvertices.push(id);\n\t\t\t}\n\n\t\t\treturn vertices;\n\t\t},\n\t\ttopologicalSort: function(edges){\n\t\t\tvar vertices = this.getVertices(edges);\n\t\t\tvar hash = {};\n\n\t\t\tfor(var i = 0, len = vertices.length; i < len; i ++){\n\t\t\t\thash[vertices[i]] = {id: vertices[i], $source:[], $target:[], $incoming: 0};\n\t\t\t}\n\n\t\t\tfor(var i = 0, len = edges.length; i < len; i++){\n\t\t\t\tvar successor = hash[edges[i].target];\n\t\t\t\tsuccessor.$target.push(i);\n\t\t\t\tsuccessor.$incoming = successor.$target.length;\n\t\t\t\thash[edges[i].source].$source.push(i);\n\n\t\t\t}\n\n\t\t\t// topological sort, Kahn's algorithm\n\t\t\tvar S = vertices.filter(function(v){ return !hash[v].$incoming; });\n\n\t\t\tvar L = [];\n\n\t\t\twhile(S.length){\n\t\t\t\tvar n = S.pop();\n\n\t\t\t\tL.push(n);\n\n\t\t\t\tvar node = hash[n];\n\n\t\t\t\tfor(var i = 0; i < node.$source.length; i++){\n\t\t\t\t\tvar m = hash[edges[node.$source[i]].target];\n\t\t\t\t\tm.$incoming--;\n\t\t\t\t\tif(!m.$incoming){\n\t\t\t\t\t\tS.push(m.id);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn L;\n\n\t\t},\n\t\tgroupAdjacentEdges: function(edges){\n\t\t\tvar res = {};\n\t\t\tvar edge;\n\t\t\tfor(var i = 0, len = edges.length; i < len; i++){\n\t\t\t\tedge = edges[i];\n\t\t\t\tif(!res[edge.source]){\n\t\t\t\t\tres[edge.source] = [];\n\t\t\t\t}\n\t\t\t\tres[edge.source].push(edge);\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\ttarjanStronglyConnectedComponents: function(vertices, edges){\n\t\t\t//https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm\n\t\t\t// iterative implementation\n\t\t\tvar verticesHash = {};\n\t\t\tvar stack = [];\n\t\t\tvar edgesFromTasks = this.groupAdjacentEdges(edges);\n\t\t\tvar recurse = false;\n\t\t\tvar connectedComponents = [];\n\n\t\t\tfor(var i = 0; i < vertices.length; i++){\n\t\t\t\tvar root = getVertex(vertices[i]);\n\t\t\t\tif(root.visited) continue;\n\t\t\t\tvar workStack = [root];\n\t\t\t\tvar index = 0;\n\t\t\t\twhile(workStack.length){\n\t\t\t\t\tvar v = workStack.pop();\n\n\t\t\t\t\tif(!v.visited){\n\t\t\t\t\t\tv.index = index;\n\t\t\t\t\t\tv.lowLink = index;\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t\tstack.push(v);\n\t\t\t\t\t\tv.onStack = true;\n\t\t\t\t\t\tv.visited = true;\n\t\t\t\t\t}\n\t\t\t\t\trecurse = false;\n\t\t\t\t\tvar edges = edgesFromTasks[v.id] || [];\n\t\t\t\t\tfor(var e = 0; e < edges.length; e++){\n\t\t\t\t\t\tvar w = getVertex(edges[e].target);\n\t\t\t\t\t\tw.edge = edges[e];\n\t\t\t\t\t\tif(w.index === undefined){\n\t\t\t\t\t\t\tworkStack.push(v);\n\t\t\t\t\t\t\tworkStack.push(w);\n\t\t\t\t\t\t\trecurse = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}else if(w.onStack){\n\t\t\t\t\t\t\tv.lowLink = Math.min(v.lowLink, w.index);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(recurse)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tif (v.index == v.lowLink){\n\t\t\t\t\t\tvar com = {tasks:[], links:[]};\n\t\t\t\t\t\twhile(true){\n\t\t\t\t\t\t\tw = stack.pop();\n\t\t\t\t\t\t\tw.onStack = false;\n\t\t\t\t\t\t\tcom.tasks.push(w.id);\n\t\t\t\t\t\t\tif(w.edge){\n\t\t\t\t\t\t\t\tcom.links.push(w.edge.id);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(w == v){\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconnectedComponents.push(com);\n\t\t\t\t\t}\n\t\t\t\t\tif(workStack.length){\n\t\t\t\t\t\tw = v;\n\t\t\t\t\t\tv = workStack[workStack.length - 1];\n\t\t\t\t\t\tv.lowLink = Math.min(v.lowLink, w.lowLink);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn connectedComponents;\n\n\t\t\tfunction getVertex(id){\n\t\t\t\tif(!verticesHash[id]){\n\t\t\t\t\tverticesHash[id] = {id: id, onStack:false, index: undefined, lowLink: undefined, edge: undefined};\n\t\t\t\t}\n\n\t\t\t\treturn verticesHash[id];\n\t\t\t}\n\t\t},\n\n\t\tfindLoops: function(relations){\n\t\t\tvar cycles = [];\n\n\t\t\thelpers.forEach(relations, function(rel){\n\t\t\t\tif(rel.target == rel.source)\n\t\t\t\t\tcycles.push([rel.target, rel.source]);\n\t\t\t});\n\n\t\t\tvar vertices = this.getVertices(relations);\n\n\t\t\tvar connectedComponents = this.tarjanStronglyConnectedComponents(vertices, relations);\n\t\t\thelpers.forEach(connectedComponents, function(component){\n\t\t\t\tif(component.tasks.length > 1){\n\t\t\t\t\tcycles.push(component);//{ tasks: [task ids], links: [links ids]}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn cycles;\n\t\t\t//{task:id, link:link.type, lag: link.lag || 0, source: link.source}\n\t\t}\n\t};\n};","module.exports = function (gantt) {\n\t// helpers for building chain of dependencies, used for critical path calculation and for auto scheduling\n\n\tgantt._get_linked_task = function (link, getTarget) {\n\t\tvar task = null;\n\t\tvar taskId = getTarget ? link.target : link.source;\n\n\t\tif (gantt.isTaskExists(taskId)) {\n\t\t\ttask = gantt.getTask(taskId);\n\t\t}\n\n\t\treturn task;\n\t};\n\tgantt._get_link_target = function (link) {\n\t\treturn gantt._get_linked_task(link, true);\n\t};\n\n\tgantt._get_link_source = function (link) {\n\t\treturn gantt._get_linked_task(link, false);\n\t};\n\n\tvar caching = false;\n\tvar formattedLinksStash = {};\n\tvar inheritedSuccessorsStash = {};\n\tvar inheritedPredecessorsStash = {};\n\tvar getPredecessorsCache = {};\n\n\n\tgantt._isLinksCacheEnabled = function () {\n\t\treturn caching;\n\t};\n\tgantt._startLinksCache = function () {\n\t\tformattedLinksStash = {};\n\t\tinheritedSuccessorsStash = {};\n\t\tinheritedPredecessorsStash = {};\n\t\tgetPredecessorsCache = {};\n\t\tcaching = true;\n\t};\n\tgantt._endLinksCache = function () {\n\t\tformattedLinksStash = {};\n\t\tinheritedSuccessorsStash = {};\n\t\tinheritedPredecessorsStash = {};\n\t\tgetPredecessorsCache = {};\n\t\tcaching = false;\n\t};\n\n\tgantt._formatLink = function (link) {\n\n\n\t\tif (caching && formattedLinksStash[link.id]) {\n\t\t\treturn formattedLinksStash[link.id];\n\t\t}\n\n\t\tvar relations = [];\n\t\tvar target = this._get_link_target(link);\n\t\tvar source = this._get_link_source(link);\n\n\t\tif (!(source && target)) {\n\t\t\treturn relations;\n\t\t}\n\n\t\tif ((gantt.isSummaryTask(target) && gantt.isChildOf(source.id, target.id)) || (gantt.isSummaryTask(source) && gantt.isChildOf(target.id, source.id))) {\n\t\t\treturn relations;\n\t\t}\n\n\n\t\t// there are three kinds of connections at this point\n\t\t// task -> task - regular link\n\t\t// task -> project - transform it into set of regular links (task -> [each subtask]), use offset beetween subtask and project dates as lag, in order not to change mutual positions of subtasks inside a project\n\t\t// project -> task - transform it into ([each subtask] -> task) links\n\t\t// project -> project - transform it into ([each subtask of p1] -> [each subtask of p2]) links\n\n\t\tvar from = this._getImplicitLinks(link, source, function (c) {\n\t\t\treturn 0;\n\t\t}, true);\n\n\t\tvar respectTargetOffset = gantt.config.auto_scheduling_move_projects;\n\t\tvar targetDates = this.isSummaryTask(target) ? this.getSubtaskDates(target.id) : {\n\t\t\tstart_date: target.start_date,\n\t\t\tend_date: target.end_date\n\t\t};\n\t\tvar to = this._getImplicitLinks(link, target, function (c) {\n\t\t\tif (!respectTargetOffset) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\n\t\t\t\tif (!c.$target.length && !(gantt.getState().drag_id == c.id)) {// drag_id - virtual lag shouldn't restrict task that is being moved inside project\n\t\t\t\t\treturn gantt.calculateDuration({\n\t\t\t\t\t\tstart_date: targetDates.start_date,\n\t\t\t\t\t\tend_date: c.start_date,\n\t\t\t\t\t\ttask: source\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tfor (var i = 0, fromLength = from.length; i < fromLength; i++) {\n\t\t\tvar fromTask = from[i];\n\t\t\tfor (var j = 0, toLength = to.length; j < toLength; j++) {\n\t\t\t\tvar toTask = to[j];\n\n\t\t\t\tvar lag = fromTask.lag * 1 + toTask.lag * 1;\n\n\t\t\t\tvar subtaskLink = {\n\t\t\t\t\tid: link.id,\n\t\t\t\t\ttype: link.type,\n\t\t\t\t\tsource: fromTask.task,\n\t\t\t\t\ttarget: toTask.task,\n\t\t\t\t\tlag: (link.lag * 1 || 0) + lag\n\t\t\t\t};\n\n\t\t\t\trelations.push(gantt._convertToFinishToStartLink(toTask.task, subtaskLink, source, target, fromTask.taskParent, toTask.taskParent));\n\t\t\t}\n\t\t}\n\n\t\tif (caching)\n\t\t\tformattedLinksStash[link.id] = relations;\n\n\t\treturn relations;\n\t};\n\n\tgantt._isAutoSchedulable = function (task) {\n\t\treturn task.auto_scheduling !== false;\n\t};\n\n\tgantt._getImplicitLinks = function (link, parent, selectOffset, selectSourceLinks) {\n\t\tvar relations = [];\n\n\t\tif (this.isSummaryTask(parent)) {\n\n\t\t\t// if the summary task contains multiple chains of linked tasks - no need to consider every task of the chain,\n\t\t\t// it will be enough to check the first/last tasks of the chain\n\t\t\t// special conditions if there are unscheduled tasks in the chain, or negative lag values that put the end date of the successor task prior to its predecessors' date\n\t\t\tvar children = {};\n\t\t\tthis.eachTask(function (c) {\n\t\t\t\tif (!this.isSummaryTask(c)) {\n\t\t\t\t\tchildren[c.id] = c;\n\t\t\t\t}\n\t\t\t}, parent.id);\n\n\t\t\tvar skipChild;\n\n\t\t\tfor (var c in children) {\n\t\t\t\tvar task = children[c];\n\t\t\t\tvar linksCollection = selectSourceLinks ? task.$source : task.$target;\n\n\t\t\t\tskipChild = false;\n\n\t\t\t\tfor (var l = 0; l < linksCollection.length; l++) {\n\t\t\t\t\tvar siblingLink = gantt.getLink(linksCollection[l]);\n\t\t\t\t\tvar siblingId = selectSourceLinks ? siblingLink.target : siblingLink.source;\n\t\t\t\t\tvar siblingTask = children[siblingId];\n\t\t\t\t\tif (siblingTask && task.auto_scheduling !== false && siblingTask.auto_scheduling !== false) {\n\t\t\t\t\t\tif ((siblingLink.target == siblingTask.id && Math.abs(siblingLink.lag) <= siblingTask.duration) ||\n\t\t\t\t\t\t\t(siblingLink.target == task.id && Math.abs(siblingLink.lag) <= task.duration)) {\n\t\t\t\t\t\t\tskipChild = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skipChild) {\n\t\t\t\t\trelations.push({ task: task.id, taskParent: task.parent, lag: selectOffset(task) });\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\trelations.push({ task: parent.id, taskParent: parent.parent, lag: 0 });\n\t\t}\n\n\t\treturn relations;\n\t};\n\n\tgantt._getDirectDependencies = function (task, selectSuccessors) {\n\n\t\tvar links = [],\n\t\t\tsuccessors = [];\n\n\t\tvar linksIds = selectSuccessors ? task.$source : task.$target;\n\n\t\tfor (var i = 0; i < linksIds.length; i++) {\n\t\t\tvar link = this.getLink(linksIds[i]);\n\t\t\tif (this.isTaskExists(link.source) && this.isTaskExists(link.target)) {\n\t\t\t\tvar target = this.getTask(link.target);\n\t\t\t\tif (this._isAutoSchedulable(target)) {\n\t\t\t\t\tlinks.push(this.getLink(linksIds[i]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\tsuccessors = successors.concat(this._formatLink(links[i]));\n\t\t}\n\n\t\treturn successors;\n\t};\n\n\tgantt._getInheritedDependencies = function (task, selectSuccessors) {\n\n\t\t//var successors = [];\n\t\tvar stop = false;\n\t\tvar inheritedRelations = [];\n\t\tvar cacheCollection;\n\t\tif (this.isTaskExists(task.id)) {\n\t\t\tthis.eachParent(function (parent) {\n\t\t\t\tif (stop)\n\t\t\t\t\treturn;\n\n\t\t\t\tif (caching) {\n\t\t\t\t\tcacheCollection = selectSuccessors ? inheritedSuccessorsStash : inheritedPredecessorsStash;\n\t\t\t\t\tif (cacheCollection[parent.id]) {\n\t\t\t\t\t\tinheritedRelations = inheritedRelations.concat(cacheCollection[parent.id]);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar parentDependencies;\n\t\t\t\tif (this.isSummaryTask(parent)) {\n\t\t\t\t\tif (!this._isAutoSchedulable(parent)) {\n\t\t\t\t\t\tstop = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tparentDependencies = this._getDirectDependencies(parent, selectSuccessors);\n\t\t\t\t\t\tif (caching) {\n\t\t\t\t\t\t\tcacheCollection[parent.id] = parentDependencies;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tinheritedRelations = inheritedRelations.concat(parentDependencies);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}, task.id, this);\n\t\t}\n\n\t\treturn inheritedRelations;\n\t};\n\n\n\tgantt._getDirectSuccessors = function (task) {\n\t\treturn this._getDirectDependencies(task, true);\n\t};\n\n\tgantt._getInheritedSuccessors = function (task) {\n\t\treturn this._getInheritedDependencies(task, true);\n\t};\n\n\tgantt._getDirectPredecessors = function (task) {\n\t\treturn this._getDirectDependencies(task, false);\n\t};\n\n\tgantt._getInheritedPredecessors = function (task) {\n\t\treturn this._getInheritedDependencies(task, false);\n\t};\n\n\tgantt._getSuccessors = function (task, skipInherited) {\n\t\tvar successors = this._getDirectSuccessors(task);\n\t\tif (skipInherited) {\n\t\t\treturn successors;\n\t\t} else {\n\t\t\treturn successors.concat(this._getInheritedSuccessors(task));\n\t\t}\n\t};\n\n\tgantt._getPredecessors = function (task, skipInherited) {\n\t\tvar key = task.id + skipInherited;\n\t\tvar result;\n\n\t\tif (caching && getPredecessorsCache[key]) {\n\t\t\treturn getPredecessorsCache[key];\n\t\t}\n\n\t\tvar predecessors = this._getDirectPredecessors(task);\n\t\tif (skipInherited) {\n\t\t\tresult = predecessors;\n\t\t} else {\n\t\t\tresult = predecessors.concat(this._getInheritedPredecessors(task));\n\t\t}\n\t\tif (caching) {\n\t\t\tgetPredecessorsCache[key] = result;\n\t\t}\n\t\treturn result;\n\t};\n\n\n\tgantt._convertToFinishToStartLink = function (id, link, sourceTask, targetTask, sourceParent, targetParent) {\n\t\t// convert finish-to-finish, start-to-finish and start-to-start to finish-to-start link and provide some additional properties\n\t\tvar res = {\n\t\t\ttarget: id,\n\t\t\tlink: gantt.config.links.finish_to_start,\n\t\t\tid: link.id,\n\t\t\tlag: link.lag || 0,\n\t\t\tsource: link.source,\n\t\t\tpreferredStart: null,\n\t\t\tsourceParent: sourceParent,\n\t\t\ttargetParent: targetParent,\n\t\t\thashSum: null\n\t\t};\n\n\t\tvar additionalLag = 0;\n\t\tswitch (link.type) {\n\t\t\tcase gantt.config.links.start_to_start:\n\t\t\t\tadditionalLag = -sourceTask.duration;\n\t\t\t\tbreak;\n\t\t\tcase gantt.config.links.finish_to_finish:\n\t\t\t\tadditionalLag = -targetTask.duration;\n\t\t\t\tbreak;\n\t\t\tcase gantt.config.links.start_to_finish:\n\t\t\t\tadditionalLag = -sourceTask.duration - targetTask.duration;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tadditionalLag = 0;\n\t\t}\n\n\t\tres.lag += additionalLag;\n\t\tres.hashSum = res.lag + \"_\" + res.link + \"_\" + res.source + \"_\" + res.target;\n\t\treturn res;\n\t};\n};"],"sourceRoot":""}